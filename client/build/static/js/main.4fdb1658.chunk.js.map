{"version":3,"sources":["fontawesome.js","components/LoginPage.js","components/AccountCreation.js","components/ProfileActions.js","components/ProfileHeader.js","components/ReportForm.js","components/Comment.js","components/CommentsSection.js","components/PostActions.js","components/SpecificPost.js","components/PostGrid.js","components/ProfilePage.js","components/EditProfile.js","components/CreatePost.js","components/LoggedInHeader.js","components/NotLoggedInHeader.js","components/SiteHeader.js","components/ProfilePreview.js","components/Search.js","components/IndividualPost.js","components/Footer.js","components/Admin.js","components/Timeline.js","components/Settings.js","components/About.js","components/Faq.js","components/Support.js","components/Guidelines.js","components/PasswordRecovery.js","components/CreateArticlePost2.js","App.js","serviceWorker.js","index.js"],"names":["library","add","faUser","faEnvelope","faLock","faSignOutAlt","faCog","faPlus","faBars","faArrowLeft","faCaretDown","faCaretUp","faComment","faHeart","faShare","faFilter","faThumbsUp","regularThumbsUp","faFlag","faCommentDollar","faClipboard","faYoutube","faImage","faAlignLeft","faGlobe","faFileAlt","faTrashAlt","faParagraph","faInstagram","faTwitter","faDollarSign","LoginPage","state","response","post","responseToPost","username","password","redirect","handleSubmit","e","a","preventDefault","fetch","method","headers","body","JSON","stringify","toLowerCase","text","includes","profileImage","split","localStorage","setItem","token","newUsername","setState","preferencesResponse","preferencesBody","parse","parsedPreferencesBody","darkMode","showNsfw","autoShowNsfw","autoCheckNsfwOnPosts","getItem","to","this","window","location","reload","className","onSubmit","type","id","value","placeholder","onChange","target","Component","AccountCreation","repeatPassword","email","Date","lastSubmitDate","now","userValid","passwordValid","emailValid","usernameErrorText","document","getElementById","emailErrorText","usernameInput","passwordInput","repeatPasswordInput","emailInput","style","borderColor","test","display","length","toString","returnedId","maxLength","minLength","color","ProfileActions","props","retrieveUserInfo","user","profile","parsedBody","loggedInUserFollowing","following","checkIfFollowedByUser","href","followingThisProfile","profileFollow","userFollowing","userFollowed","isFollowing","alert","profileUnfollow","showProfileReportForm","reportProfileConfirmation","submitProfileReport","defendant","reportDate","reportedBy","innerHTML","followingList","prevProps","prevState","snapshot","url","icon","onClick","width","marginLeft","marginTop","verticalAlign","ProfileHeader","retrieveProfileInfo","current_url","profileViewed","profileHeader","profileName","postCount","followerCount","followingCount","description","profilePicNsfw","setNumberConversions","toFixed","Math","round","followerString","substring","followingString","postCountString","catch","err","console","log","src","process","alt","clear","ReportForm","handleReport","reportErrorMessage","isPost","nsfw","reportRule1","reportRule2","reportRule5","rulesReported","checked","push","postId","submitted","reportFailed","reportRule3","reportRule4","commentId","htmlFor","NOT_LIKED","LIKED","Comment","checkIfCommentBelongsToUser","checkMarginBarrier","thisComment","isReply","replyDepth","checkIfLikedByUser","likedCommentsByUser","commentLikeIcon","likeOrLiked","retrieveProfileImage","error","likeComment","likeOrLikes","likes","liked","likedBy","displayReplies","commentReplies","caretDown","caretUp","retrieveCommentReplies","replyToComment","commentReplyForm","enableButton","replyToCommentTextarea","postCommentReplyButton","disabled","addEventListener","handleCommentReplyPost","removeEventListener","retrieveComments","_id","commentsArr","i","content","replies","comments","commentText","commentToAddReply","repliesLoaded","reportComment","reportForm","deleteComment","profileLink","replyingTo","preReplyString","newLine","replyOrReplies","isTimeline","rows","map","comment","key","CommentsSection","displayComments","commentsSection","commentTextarea","postCommentButton","handleCommentPost","numComments","isFromProfile","PostActions","checkDarkMode","likeButton","shareButton","reportButton","checkIfPostBelongsToUser","postDeleteButton","likedPostsByUser","postLikeIcon","likePost","sharePost","shareOptions","copyPostLink","confirmCopy","select","setSelectionRange","execCommand","reportPost","showDeleteConfirmation","hideDeleteConfirmation","deletePost","linkForSharing","SITE_BASE_URL","linkToSharePost","marginRight","TwitterShareButton","TwitterIcon","RedditShareButton","RedditIcon","FacebookShareButton","FacebookIcon","readOnly","SpecificPost","checkNsfwStatus","imageSource","postPic","borderTop","borderBottom","background","checkIfTimeline","timelineProfileLink","displayNsfwImage","unveilVideo","video","videoNsfwPic1","videoNsfwPic2","videoNsfwPic3","specifiedPostVideo","isAdmin","textAlign","timeSincePost","creationDate","parsedVideoLink","postTimeTag","parseInt","MINUTES_IN_HOUR","hoursAgo","daysAgo","monthsAgo","yearsAgo","videoLink","videoId","paddingLeft","textDecoration","title","height","frameBorder","allow","allowFullScreen","PostGrid","posts","margin","fontWeight","gridLayout","ProfilePage","renderPosts","pathname","Row","Col","name","event","handleSwitchToggle","EditProfile","enableButtonCheck","file","postIsNSFWCheckbox","postIsNotNSFWCheckbox","nsfwCheckboxAction","displayPreview","handleChange","bind","fileUploadInput","files","item","size","separated","fileType","URL","createObjectURL","Container","action","encType","aria-label","cols","defaultValue","CreatePost","togglePostType","button","newPostImageButton","newPostTextButton","newPostVideoButton","imagePost","textPost","videoPost","openPostTypeMenu","submitTextPost","textPostTitle","textPostContent","replace","submitVideoPost","videoPostDescription","videoPostURL","startsWith","choosePostTypeMenu","readyToPost","postIsNSFW","postIsNotNSFW","maxWidth","LoggedInHeader","logOut","toggleMenu","menu","menuHamburger","banCheck","marginBottom","NotLoggedInHeader","float","SiteHeader","ProfilePreview","isProfilePicNsfw","isComment","desc","Search","searchBar","searchResults","backgroundColor","pageClick","targetElement","srcElement","noUsers","currentlyLoadingSearch","usersResult","toggleResult","searchResultsNone","currentlyLoading","searchUsers","userToSearch","query","searchUser","clickedSearchResultProfile","searchTerm","IndividualPost","retrievePost","usefulInfo","profileExists","Footer","scrollToTop","scrollTop","documentElement","RULES","Admin","renderReports","reports","retrievePostOrCommentInQuestion","reportsIndex","reportClicked","viewPost","postLink","guiltyVerdict","reportId","verdictRule1","verdictRule2","verdictRule3","verdictRule4","verdictRule5","innocentButton","guiltyButton","rule1Broken","rule2Broken","rule3Broken","rule4Broken","rule5Broken","innocentVerdict","report","rel","ruleReported","j","Timeline","globalTimeline","globalTimelinePosts","timelinePosts","Settings","handleSettingToggle","getElementsByTagName","statusText","saveChanges","saveButtonText","paddingTop","About","Faq","Support","Guidelines","PasswordRecovery","sendRecoveryCode","emailSentTo","setNewPassword","recoveryCodeInput","newPasswordInput","repeatNewPasswordInput","recoveryCode","newPassword","responseToRequest","CreateArticlePost","App","retrieveLikedPostsByUser","likedPosts","retrieveLikedCommentsByUser","likedComments","profileDescription","retrieveTimelinePosts","retrieveGlobalTimelinePosts","exact","path","render","component","Boolean","hostname","match","ReactDOM","navigator","serviceWorker","ready","then","registration","unregister","message"],"mappings":"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","file":"static/js/main.4fdb1658.chunk.js","sourcesContent":["import { library } from '@fortawesome/fontawesome-svg-core';\r\nimport {\r\n  faUser,\r\n  faEnvelope,\r\n  faLock,\r\n  faSignOutAlt,\r\n  faCog,\r\n  faPlus,\r\n  faBars,\r\n  faArrowLeft,\r\n  faCaretDown,\r\n  faCaretUp,\r\n  faCommentDollar,\r\n  faComment,\r\n  faHeart,\r\n  faShare,\r\n  faFilter,\r\n  faThumbsUp,\r\n  faFlag,\r\n  faAlignLeft,\r\n  faGlobe,\r\n  faFileAlt,\r\n  faTrashAlt,\r\n  faParagraph,\r\n  faDollarSign,\r\n} from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport {\r\n  faThumbsUp as regularThumbsUp,\r\n  faClipboard,\r\n  faImage,\r\n} from '@fortawesome/free-regular-svg-icons';\r\n\r\nimport {\r\n  faYoutube,\r\n  faInstagram,\r\n  faTwitter,\r\n} from '@fortawesome/free-brands-svg-icons';\r\n\r\n// import {\r\n//   faHeart,\r\n// } from '@fortawesome/free-regular-svg-icons';\r\n\r\nlibrary.add(\r\n  faUser,\r\n  faEnvelope,\r\n  faLock,\r\n  faSignOutAlt,\r\n  faCog,\r\n  faPlus,\r\n  faBars,\r\n  faArrowLeft,\r\n  faCaretDown,\r\n  faCaretUp,\r\n  faComment,\r\n  faHeart,\r\n  faShare,\r\n  faFilter,\r\n  faThumbsUp,\r\n  regularThumbsUp,\r\n  faFlag,\r\n  faCommentDollar,\r\n  faClipboard,\r\n  faYoutube,\r\n  faImage,\r\n  faAlignLeft,\r\n  faGlobe,\r\n  faFileAlt,\r\n  faTrashAlt,\r\n  faParagraph,\r\n  faInstagram,\r\n  faTwitter,\r\n  faDollarSign,\r\n);\r\n","import React, { Component } from 'react';\r\nimport '../App.css';\r\nimport '../styles/loginPage.css';\r\nimport { Redirect } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass LoginPage extends Component {\r\n  state = {\r\n    response: '',\r\n    post: '',\r\n    responseToPost: '',\r\n    username: '',\r\n    password: '',\r\n    redirect: false\r\n  }\r\n\r\n  handleSubmit = async e => {\r\n    e.preventDefault()\r\n    const response = await fetch('/profile/login', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        username: this.state.username.toLowerCase(),\r\n        password: this.state.password\r\n      })\r\n    })\r\n    const body = await response.text()\r\n    if (body.includes(\"success\")) {\r\n      // redirect to your profile page\r\n      let profileImage = body.split(\": \")[1]\r\n      profileImage = profileImage.split(\", token - \")[0]\r\n      localStorage.setItem('profileImage', profileImage)\r\n      const token = body.split(\" - \")[1].split(\" username? \")[0]\r\n      localStorage.setItem('token', token)\r\n      const newUsername = await body.split(\" username? \")[1]\r\n      await this.setState({\r\n        username: newUsername\r\n      })\r\n      // retrieve user's preferences from databases\r\n      const preferencesResponse = await fetch(\r\n        '/profile/getPreferences/' + this.state.username\r\n      )\r\n      const preferencesBody = await preferencesResponse.text()\r\n      const parsedPreferencesBody = await JSON.parse(preferencesBody)\r\n      // set the preferences in local storage\r\n      localStorage.setItem('darkMode', parsedPreferencesBody.darkMode)\r\n      localStorage.setItem('showNsfw', parsedPreferencesBody.showNsfw)\r\n      localStorage.setItem('autoShowNsfw', parsedPreferencesBody.autoShowNsfw)\r\n      localStorage.setItem(\r\n        'autoCheckNsfwOnPosts', parsedPreferencesBody.autoCheckNsfwOnPosts\r\n      )\r\n      this.setState({ redirect: true })\r\n    } else if (body === 'invalid password') {\r\n      this.setState({ responseToPost: 'Invalid username and/or password' })\r\n    } else if (body === 'Username does not exist') {\r\n      this.setState({ responseToPost: 'Username does not exist'})\r\n    } else {\r\n      this.setState({ responseToPost: body})\r\n    }\r\n  }\r\n\r\n  render() {\r\n    // if already logged in, redirect to your timeline\r\n    if (localStorage.getItem('plumUser56010')) {\r\n      return <Redirect to={\"/timeline\"} />\r\n    }\r\n\r\n    // if log-in was successful, redirect to your profile\r\n    if (this.state.redirect) {\r\n      localStorage.setItem('plumUser56010', this.state.username)\r\n      window.location.reload(false);\r\n      return <Redirect to={\"/profile/\" + this.state.username.toLowerCase()} />\r\n    }\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n\r\n        </header>\r\n        <p>{this.state.response}</p>\r\n        <h2>\r\n          <strong>Welcome to GifShr</strong>\r\n        </h2>\r\n        Don't have an account? <Link to=\"/accountCreation\">Sign up!</Link><br />\r\n        <form onSubmit={this.handleSubmit}>\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"usernameInput\"\r\n              value={this.state.username}\r\n              placeholder=\"Username or e-mail\"\r\n              onChange={e => this.setState({ username: e.target.value })}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"password\"\r\n              className=\"form-control\"\r\n              id=\"passwordInput\"\r\n              placeholder=\"Password\"\r\n              onChange={e => this.setState({ password: e.target.value })}\r\n            />\r\n          </div>\r\n          <p>{this.state.responseToPost}</p>\r\n          <button type=\"submit\" className=\"btn btn-primary\">Login</button>\r\n          <br />\r\n          <br />\r\n          Forgot your password? <Link to=\"/passwordRecovery\">Click here</Link>\r\n        </form>\r\n        <br />\r\n        <br />\r\n        {\r\n          // <UpcomingFeaturePlug />\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginPage;\r\n","import React, { Component } from 'react';\r\nimport '../App.css';\r\nimport '../styles/loginPage.css';\r\nimport '../styles/accountCreation.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { Redirect } from 'react-router';\r\n\r\n// account creation timeout (5 mins)\r\nconst ACCOUNT_CREATION_TIMEOUT = 300000\r\n\r\nclass AccountCreation extends Component {\r\n  state = {\r\n    response: '',\r\n    post: '',\r\n    responseToPost: '',\r\n    username: '',\r\n    password: '',\r\n    repeatPassword: '',\r\n    email: '',\r\n    redirect: false\r\n  }\r\n\r\n  handleSubmit = async e => {\r\n    e.preventDefault()\r\n    // if another account was created less than 5 minutes ago, deny\r\n\r\n    if (localStorage.getItem('lastAccountCreation')) {\r\n      const lastSubmitDate = await Date.parse(\r\n        localStorage.getItem('lastAccountCreation')\r\n      )\r\n      if (Date.now() - lastSubmitDate < ACCOUNT_CREATION_TIMEOUT) {\r\n        this.setState({\r\n          responseToPost: 'You cannot create another account so quickly. Please wait a couple of minutes.'\r\n        })\r\n        return\r\n      } else {\r\n        this.setState({\r\n          responseToPost: ''\r\n        })\r\n      }\r\n    }\r\n\r\n\r\n    let userValid = true\r\n    let passwordValid = true\r\n    let emailValid = true\r\n    const usernameErrorText = document.getElementById(\"usernameErrorText\")\r\n    const emailErrorText = document.getElementById('emailErrorText')\r\n\r\n    // get input boxes\r\n    const usernameInput = document.getElementById('usernameInput')\r\n    const passwordInput = document.getElementById('passwordInput')\r\n    const repeatPasswordInput = document.getElementById('repeatPasswordInput')\r\n    const emailInput = document.getElementById('emailInput')\r\n    usernameInput.style.borderColor = 'gainsboro'\r\n    passwordInput.style.borderColor = 'gainsboro'\r\n    repeatPasswordInput.style.borderColor = 'gainsboro'\r\n    emailInput.style.borderColor = 'gainsboro'\r\n\r\n    var re = /^\\w+$/;\r\n    if (!re.test(this.state.username)) {\r\n      usernameErrorText.style.display = 'inline'\r\n      userValid = false\r\n      usernameInput.style.borderColor = 'red'\r\n    } else {\r\n      usernameErrorText.style.display = 'none'\r\n      userValid = true\r\n    }\r\n\r\n    if (this.state.email.length < 1) {\r\n      emailInput.style.borderColor = 'red'\r\n      emailValid = false\r\n      emailErrorText.style.display = 'inline'\r\n    } else {\r\n      emailErrorText.style.display = 'none'\r\n      emailValid = true\r\n    }\r\n\r\n    if (this.state.password !== this.state.repeatPassword) {\r\n      this.setState({ responseToPost: \"Passwords do not match\" })\r\n      passwordInput.style.borderColor = 'red'\r\n      repeatPasswordInput.style.borderColor = 'red'\r\n    } else if (this.state.password.length > 0 &&\r\n               this.state.username.length > 0 &&\r\n               userValid && passwordValid && emailValid) {\r\n      const response = await fetch('/profile/create', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          username: this.state.username,\r\n          password: this.state.password,\r\n          email: this.state.email\r\n        })\r\n      })\r\n      const body = await response.text()\r\n      if (body.includes(\"success\")) {\r\n        // set last account created\r\n        localStorage.setItem('lastAccountCreation', new Date().toString())\r\n        // redirect to your profile page\r\n        const returnedId = body.split(', ')[1]\r\n        localStorage.setItem('token', returnedId)\r\n        this.setState({ redirect: true })\r\n      } else if (body === \"Username already exists\") {\r\n        const usernameInput = document.getElementById('usernameInput')\r\n        usernameInput.style.borderColor = 'red'\r\n      } else if (body === \"An account with this email already exists\") {\r\n        emailInput.style.borderColor = 'red'\r\n      }\r\n      this.setState({ responseToPost: body })\r\n    } else {\r\n      if (userValid && passwordValid && emailValid) {\r\n        this.setState({\r\n          responseToPost: \"Password cannot be empty\"\r\n        })\r\n        passwordInput.style.borderColor = 'red'\r\n        repeatPasswordInput.style.borderColor = 'red'\r\n      } else {\r\n        this.setState({\r\n          responseToPost: \"\"\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    // if already logged in, redirect to your profile\r\n    if (localStorage.getItem('plumUser56010')) {\r\n      return <Redirect to=\"/timeline\" />\r\n    }\r\n\r\n    // if account creation was successful, redirect to your profile\r\n    if (this.state.redirect) {\r\n      // set user to username and save to browser storage\r\n      localStorage.setItem('plumUser56010', this.state.username.toLowerCase())\r\n      window.location.reload(false)\r\n      return <Redirect to=\"/timeline\" />\r\n    }\r\n    return (\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n\r\n        </header>\r\n        <p>{this.state.response}</p>\r\n        <h2>\r\n          <strong>Create a GifShr account </strong>\r\n        </h2>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"usernameInput\"\r\n              value={this.state.username}\r\n              placeholder=\"Username\"\r\n              maxLength=\"30\"\r\n              onChange={e => this.setState({ username: e.target.value })}\r\n            />\r\n          </div>\r\n          <div id=\"usernameErrorText\">\r\n            Usernames can only contain letters (a-z), numbers (0-9),\r\n            underscores (_).\r\n            <br />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"password\"\r\n              className=\"form-control\"\r\n              id=\"passwordInput\"\r\n              placeholder=\"Password\"\r\n              minLength=\"5\"\r\n              maxLength=\"30\"\r\n              onChange={e => this.setState({ password: e.target.value })}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"password\"\r\n              className=\"form-control\"\r\n              id=\"repeatPasswordInput\"\r\n              placeholder=\"Repeat password\"\r\n              minLength=\"5\"\r\n              maxLength=\"30\"\r\n              onChange={e => this.setState({ repeatPassword: e.target.value })}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            NOTE: This email is only used for password recovery. We will not send you anything otherwise.<br />\r\n            <input\r\n              type=\"email\"\r\n              className=\"form-control\"\r\n              id=\"emailInput\"\r\n              placeholder=\"Email\"\r\n              minLength=\"2\"\r\n              maxLength=\"60\"\r\n              onChange={e => this.setState({ email: e.target.value })}\r\n            />\r\n          </div>\r\n          <div id=\"emailErrorText\" style={{display: 'none', color: 'red'}}>\r\n            Please enter a valid email.\r\n            <br />\r\n          </div>\r\n          <p id=\"responseText\">{this.state.responseToPost}</p>\r\n          <button type=\"submit\" className=\"btn btn-success\">\r\n            Create new account\r\n          </button>\r\n        </form>\r\n        <Link to=\"/login\">\r\n          <button type=\"button\" className=\"btn btn-outline-secondary\">\r\n            Back to login\r\n          </button>\r\n        </Link>\r\n        <br />\r\n        <br />\r\n        {\r\n          // <UpcomingFeaturePlug />\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default AccountCreation;\r\n","import React, { Component } from 'react';\r\nimport '../App.css';\r\nimport '../styles/loginPage.css';\r\nimport '../styles/accountCreation.css';\r\nimport '../styles/Header.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nclass ProfileActions extends Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      followingThisProfile: false,\r\n      loggedInUserFollowing: this.props.followingList\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.retrieveUserInfo()\r\n  }\r\n\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (this.props.url !== prevProps.url) {\r\n      this.checkIfFollowedByUser()\r\n    }\r\n  }\r\n\r\n  // retrieve info of the user signed in\r\n  retrieveUserInfo = async () => {\r\n    // make sure user is signed in\r\n    if (!localStorage.getItem('plumUser56010')) {\r\n      return\r\n    }\r\n    const user = localStorage.getItem('plumUser56010')\r\n    if (user) {\r\n      const response = await fetch('/profile/retrieveProfileInfo', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          profile: user,\r\n          token: localStorage.getItem('token')\r\n        })\r\n      })\r\n      const body = await response.text()\r\n      if (body !== \"profile not found.\" && body !== 'error') {\r\n        const parsedBody = JSON.parse(body)\r\n        await this.setState({\r\n          loggedInUserFollowing: parsedBody.following\r\n        })\r\n        this.checkIfFollowedByUser()\r\n      }\r\n    }\r\n  }\r\n\r\n  // check if followed by user\r\n  checkIfFollowedByUser = () => {\r\n    const current_url = window.location.href\r\n    const usefulInfo = current_url.split('profile/')[1]\r\n    const user = usefulInfo.split('/')[0].split('#')[0]\r\n    if (this.state.loggedInUserFollowing.includes(user)) {\r\n      if (!this.state.followingThisProfile) {\r\n        this.setState({\r\n          followingThisProfile: true\r\n        })\r\n      }\r\n    } else {\r\n      if (this.state.followingThisProfile) {\r\n        this.setState({\r\n          followingThisProfile: false\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  // user wants to follow this profile\r\n  profileFollow = async () => {\r\n    // make sure user is signed in\r\n    if (!localStorage.getItem('plumUser56010')) {\r\n      const mustBeSignedIn = document.getElementById(\"mustBeSignedIn\")\r\n      mustBeSignedIn.style.display = 'inline'\r\n      return\r\n    }\r\n    this.setState({\r\n      followingThisProfile: true\r\n    })\r\n    const response = await fetch('/profile/userFollowAction', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        userFollowing: localStorage.getItem('plumUser56010'),\r\n        userFollowed: this.props.profile,\r\n        isFollowing: true,\r\n        token: localStorage.getItem('token')\r\n      })\r\n    })\r\n    const body = await response.text()\r\n    if (body !== 'successful follow/unfollow action') {\r\n      alert(\"Follow action unsuccessful. Please refresh and try again.\")\r\n    }\r\n  }\r\n\r\n  // user wants to unfollow this profile\r\n  profileUnfollow = async () => {\r\n    // make sure user is signed in\r\n    if (!localStorage.getItem('plumUser56010')) {\r\n      const mustBeSignedIn = document.getElementById(\"mustBeSignedIn\")\r\n      mustBeSignedIn.style.display = 'inline'\r\n      return\r\n    }\r\n    this.setState({\r\n      followingThisProfile: false\r\n    })\r\n    const response = await fetch('/profile/userFollowAction', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        userFollowing: localStorage.getItem('plumUser56010'),\r\n        userFollowed: this.props.profile,\r\n        isFollowing: false,\r\n        token: localStorage.getItem('token')\r\n      })\r\n    })\r\n    const body = await response.text()\r\n    if (body !== 'successful follow/unfollow action') {\r\n      alert(\"Unfollow action unsuccessful. Please refresh and try again.\")\r\n    }\r\n  }\r\n\r\n  // show report confirmation on a profile\r\n  showProfileReportForm = () => {\r\n    const reportProfileConfirmation = document.getElementById('reportProfileConfirmation')\r\n    if (reportProfileConfirmation.style.display === 'none') {\r\n      reportProfileConfirmation.style.display = 'inline'\r\n    } else {\r\n      reportProfileConfirmation.style.display = 'none'\r\n    }\r\n  }\r\n\r\n  // profile report submission\r\n  submitProfileReport = async () => {\r\n    if (!localStorage.getItem('plumUser56010')) {\r\n      alert(\"You must be signed in to perform this action.\")\r\n      return\r\n    }\r\n    const response = await fetch('/report/submitReport', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        defendant: this.props.profile,\r\n        reportDate: new Date(),\r\n        reportedBy: localStorage.getItem('plumUser56010')\r\n      })\r\n    })\r\n    const body = await response.text()\r\n    if (body === 'success') {\r\n      // hide report button\r\n      const reportProfileConfirmation = document.getElementById('reportProfileConfirmation')\r\n      reportProfileConfirmation.innerHTML = '<br />Thank You for submitting your report. A human will review this profile.'\r\n\r\n    } else {\r\n      alert(\"Report failed. Please try again later.\")\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (this.props.profile === localStorage.getItem('plumUser56010')) {\r\n      // if you are on your own profile, render edit profile button\r\n      return (\r\n        <div id=\"ownProfileOptions\">\r\n          <Link to=\"/editProfile\" >\r\n            <button type=\"button\" className={localStorage.getItem('darkMode') === 'true' ? \"btn btn-primary\" : \"btn btn-outline-primary\"}>\r\n              Edit Profile\r\n              &nbsp;\r\n              < FontAwesomeIcon icon=\"cog\" />\r\n            </button>\r\n          </Link>\r\n          <Link to=\"/createPost\" >\r\n            <button type=\"button\" className={localStorage.getItem('darkMode') === 'true' ? \"btn btn-success\" : \"btn btn-outline-success\"}>\r\n              New post\r\n              &nbsp;\r\n              < FontAwesomeIcon icon=\"plus\"  />\r\n            </button>\r\n          </Link>\r\n        </div>\r\n      )\r\n    } else if (this.state.followingThisProfile) {\r\n      // if you are on a profile you are following,\r\n      // render an \"unfollow\" button\r\n      return (\r\n        <div>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-secondary\"\r\n            onClick={this.profileUnfollow}\r\n            style={{width: '200px', marginLeft: '10px'}}\r\n          >\r\n            Unfollow\r\n          </button>\r\n          <br />\r\n          <button\r\n            className=\"commentActionButton postActionButton postReportButton\"\r\n            id=\"profileReportButton\"\r\n            onClick={this.showProfileReportForm}\r\n            style={{marginLeft: '20px', marginTop: '20px', verticalAlign: 'bottom', width: '120px'}}\r\n          >\r\n            < FontAwesomeIcon icon='flag' id=\"postReportIcon\"/>\r\n            Report Profile\r\n          </button>\r\n          <div\r\n            id=\"reportProfileConfirmation\"\r\n            style={{display: 'none'}}>\r\n            <br />\r\n            Would you like us to review this profile?\r\n            <button onClick={this.submitProfileReport}>Yes</button>\r\n            <button onClick={this.showProfileReportForm}>No</button>\r\n          </div>\r\n        </div>\r\n      )\r\n    } else {\r\n      // if you are on a profile you are not following,\r\n      // render a \"follow\" button\r\n      return (\r\n        <div>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-primary\"\r\n            onClick={this.profileFollow}\r\n            style={{width: '200px', marginLeft: '10px'}}\r\n          >\r\n            Follow\r\n          </button>\r\n          <br />\r\n          <button\r\n            className=\"commentActionButton postActionButton postReportButton\"\r\n            id=\"profileReportButton\"\r\n            onClick={this.showProfileReportForm}\r\n            style={{marginLeft: '20px', marginTop: '20px', width: '120px'}}\r\n          >\r\n            <FontAwesomeIcon icon='flag' id=\"postReportIcon\" />\r\n            Report Profile\r\n          </button>\r\n          <div\r\n            id=\"reportProfileConfirmation\"\r\n            style={{display: 'none'}}>\r\n            <br />\r\n            Would you like us to review this profile?\r\n            <button onClick={this.submitProfileReport}>Yes</button>\r\n            <button onClick={this.showProfileReportForm}>No</button>\r\n          </div>\r\n          <div id=\"mustBeSignedIn\" style={{display: 'none'}}>\r\n            <br />\r\n            You must be signed in to perform this action.\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nexport default ProfileActions;\r\n","import React, { Component } from 'react';\r\nimport '../App.css';\r\nimport '../styles/loginPage.css';\r\nimport '../styles/accountCreation.css';\r\nimport '../styles/Header.css';\r\nimport ProfileActions from './ProfileActions';\r\n\r\n// numbers which dictate a change in format\r\nconst ONE_MILLION = 1000000\r\nconst ONE_HUNDRED_THOUSAND = 100000\r\nconst TEN_THOUSAND = 10000\r\nconst ONE_THOUSAND = 1000\r\n\r\nclass ProfileHeader extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      response: '',\r\n      profileName: '',\r\n      postCount: 0,\r\n      followingCount: 0,\r\n      followerCount: 0,\r\n      description: '',\r\n      profilePicNsfw: false\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.retrieveProfileInfo()\r\n      .catch(err => console.log(err))\r\n  }\r\n\r\n  // this will enable Link usage as opposed to <a href>\r\n  // (not reloading whole page) when going to another profile\r\n  // while already on the /profile/:user path.\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (this.props.url !== prevProps.url) {\r\n      this.retrieveProfileInfo()\r\n        .catch(err => console.log(err))\r\n    }\r\n  }\r\n\r\n  // retrieve info of the profile being viewed\r\n  retrieveProfileInfo = async () => {\r\n    // parse URL and grab username of profile being viewed\r\n    const current_url = window.location.href\r\n    let profileViewed = await current_url.split('profile/')[1]\r\n    // check if post appended in url\r\n    if (profileViewed.includes('/')) {\r\n      profileViewed = await profileViewed.split('/')[0]\r\n    }\r\n    profileViewed = profileViewed.toLowerCase()\r\n    // retrieve info of profile being viewed\r\n    const response = await fetch('/profile/retrieveProfileInfo', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        profile: profileViewed,\r\n        token: localStorage.getItem('token'),\r\n        profileHeader: 'please send counts only'\r\n      })\r\n    })\r\n    const body = await response.text()\r\n    const profileNotFound = \"profile not found.\"\r\n    if (body === profileNotFound) {\r\n      this.setState({ response: profileNotFound })\r\n    } else if (body.includes(\"<\") || body === 'error') {\r\n      this.setState({\r\n        response: \"Please reload page to see profile info.\"\r\n      })\r\n    } else {\r\n      const parsedBody = await JSON.parse(body)\r\n      await this.setState({\r\n        profileName: parsedBody.username,\r\n        postCount: parsedBody.postCount,\r\n        followerCount: parsedBody.followerCount,\r\n        followingCount: parsedBody.followingCount,\r\n        profileImage: parsedBody.profileImage,\r\n        description: parsedBody.description,\r\n        profilePicNsfw: parsedBody.profilePicNsfw\r\n      })\r\n\r\n      if (parsedBody.profilePicNsfw) {\r\n        if (localStorage.getItem('showNsfw') === 'false') {\r\n          await this.setState({\r\n            profileImage: '/nsfw_post_in_grid_with_auto_nsfw_off.png'\r\n          })\r\n        }\r\n      }\r\n      this.setNumberConversions()\r\n    }\r\n  }\r\n\r\n  // set the numbers to strings\r\n  // (including commas or decimals, or ending with K or M)\r\n  setNumberConversions = () => {\r\n    const followerCount = this.state.followerCount\r\n    const followingCount = this.state.followingCount\r\n    const postCount = this.state.postCount\r\n\r\n    // follower count\r\n    if (followerCount >= ONE_MILLION) {\r\n      this.setState({\r\n        followerCount: (followerCount / ONE_MILLION).toFixed(1) + 'M'\r\n      })\r\n    } else if (followerCount >= ONE_HUNDRED_THOUSAND) {\r\n      this.setState({\r\n        followerCount: Math.round(followerCount / ONE_THOUSAND) + 'K'\r\n      })\r\n    } else if (followerCount >= TEN_THOUSAND) {\r\n      this.setState({\r\n        followerCount: (followerCount / ONE_THOUSAND).toFixed(1) + 'K'\r\n      })\r\n    } else if (followerCount >= ONE_THOUSAND) {\r\n      let followerString = followerCount.toString()\r\n      this.setState({\r\n        followerCount: followerString[0] + ',' + followerString.substring(1, 4)\r\n      })\r\n    }\r\n\r\n    // following count\r\n    if (followingCount >= ONE_MILLION) {\r\n      this.setState({\r\n        followingCount: (followingCount / ONE_MILLION).toFixed(1) + 'M'\r\n      })\r\n    } else if (followingCount >= ONE_HUNDRED_THOUSAND) {\r\n      this.setState({\r\n        followingCount: Math.round(followingCount / ONE_THOUSAND) + 'K'\r\n      })\r\n    } else if (followingCount >= TEN_THOUSAND) {\r\n      this.setState({\r\n        followingCount: (followingCount / ONE_THOUSAND).toFixed(1) + 'K'\r\n      })\r\n    } else if (followingCount >= ONE_THOUSAND) {\r\n      let followingString = followingCount.toString()\r\n      this.setState({\r\n        followingCount: followingString[0] + ',' + followingString.substring(1, 4)\r\n      })\r\n    }\r\n\r\n    // post count\r\n    if (postCount >= TEN_THOUSAND) {\r\n      this.setState({\r\n        postCount: (postCount / ONE_THOUSAND).toFixed(1) + 'K'\r\n      })\r\n    } else if (postCount >= ONE_THOUSAND) {\r\n      let postCountString = postCount.toString()\r\n      this.setState({\r\n        postCount: postCountString[0] + ',' + postCountString.substring(1, 4)\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (this.state.response) {\r\n      return (\r\n        <div className=\"App\">\r\n          <h4>{this.state.response}</h4>\r\n        </div>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <div className=\"App\" id=\"profileHeader\">\r\n        <span id=\"profilePicInProfileHeader\">\r\n          <img\r\n            id=\"profilePicture\"\r\n            src={process.env.PUBLIC_URL + this.state.profileImage}\r\n            alt=\"profile\"\r\n          />\r\n        </span>\r\n        <span id=\"profileStats\">\r\n        <br />\r\n        <h5 id=\"profileHeaderProfileName\">{this.state.profileName}</h5>\r\n\r\n          {this.state.followerCount} Followers &nbsp;&nbsp;\r\n          {this.state.followingCount} Following &nbsp;&nbsp;\r\n          {this.state.postCount} posts\r\n        </span>\r\n        <div style={{clear: 'both'}}></div>\r\n        <br />\r\n        <p id=\"profileHeaderDescription\">\r\n          {this.state.description}\r\n        </p>\r\n        <ProfileActions\r\n          profile={this.state.profileName}\r\n          followingList={this.props.loggedInUserFollowing}\r\n          url={this.props.url}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProfileHeader;\r\n","import React, { Component } from 'react';\r\n\r\nclass ReportForm extends Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      submitted: false,\r\n      reportFailed: false,\r\n    }\r\n  }\r\n\r\n  // make sure if profile is changed after a report is submitted,\r\n  // post in this location does not have submitted message\r\n  async componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (this.props.id !== prevProps.id) {\r\n      this.setState({\r\n        submitted: false,\r\n        reportFailed: false\r\n      })\r\n    }\r\n  }\r\n\r\n  // function to handle report\r\n  handleReport = async () => {\r\n    const reportErrorMessage = document.getElementById(\"reportError\" + this.props.id)\r\n    if (!localStorage.getItem('plumUser56010')) {\r\n      if (!this.props.isPost) {\r\n        alert(\"You must be signed in to perform this action.\")\r\n      } else {\r\n        const mustBeSignedIn = document.getElementById(\"mustBeSignedIn\")\r\n        mustBeSignedIn.style.display = 'inline'\r\n        alert(\"You must be signed in to perform this action.\")\r\n      }\r\n      return\r\n    }\r\n    if (this.props.isPost) {\r\n      // post report handler\r\n      if (this.props.nsfw) {\r\n        // nsfw post\r\n        // get all rule checkboxes\r\n        // this post type contains rules 1, 2, and 5\r\n        const reportRule1 = document.getElementById(\"reportRule1\" + this.props.id)\r\n        const reportRule2 = document.getElementById(\"reportRule2\" + this.props.id)\r\n        const reportRule5 = document.getElementById(\"reportRule5\" + this.props.id)\r\n        // store the rule numbers broken in array\r\n        let rulesReported = []\r\n        if (reportRule1.checked) {\r\n          rulesReported.push(1)\r\n        }\r\n        if (reportRule2.checked) {\r\n          rulesReported.push(2)\r\n        }\r\n        if (reportRule5.checked) {\r\n          rulesReported.push(5)\r\n        }\r\n\r\n        if (rulesReported.length > 0) {\r\n          // if rulesReported contains some, push the report.\r\n          // post info to API\r\n          const response = await fetch('/report/submitReport', {\r\n            method: 'POST',\r\n            headers: {\r\n              'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n              defendant: this.props.profile,\r\n              postId: this.props.id,\r\n              reportDate: new Date(),\r\n              rulesReported: rulesReported,\r\n              reportedBy: localStorage.getItem('plumUser56010')\r\n            })\r\n          })\r\n          const body = await response.text()\r\n          if (body === 'success') {\r\n            this.setState({\r\n              submitted: true\r\n            })\r\n          } else {\r\n            this.setState({\r\n              reportFailed: true\r\n            })\r\n          }\r\n          reportErrorMessage.style.display = 'none'\r\n        } else {\r\n          // if none selected, display error message.\r\n          reportErrorMessage.style.display = 'inline'\r\n        }\r\n      } else {\r\n        // regular (non-nsfw post)\r\n        // this post type contains rules 1, 2, 3, 4, 5\r\n        const reportRule1 = document.getElementById(\"reportRule1\" + this.props.id)\r\n        const reportRule2 = document.getElementById(\"reportRule2\" + this.props.id)\r\n        const reportRule3 = document.getElementById(\"reportRule3\" + this.props.id)\r\n        const reportRule4 = document.getElementById(\"reportRule4\" + this.props.id)\r\n        const reportRule5 = document.getElementById(\"reportRule5\" + this.props.id)\r\n\r\n        let rulesReported = []\r\n        if (reportRule1.checked) {\r\n          rulesReported.push(1)\r\n        }\r\n        if (reportRule2.checked) {\r\n          rulesReported.push(2)\r\n        }\r\n        if (reportRule3.checked) {\r\n          rulesReported.push(3)\r\n        }\r\n        if (reportRule4.checked) {\r\n          rulesReported.push(4)\r\n        }\r\n        if (reportRule5.checked) {\r\n          rulesReported.push(5)\r\n        }\r\n\r\n        if (rulesReported.length > 0) {\r\n          // if rulesReported contains some, push the report.\r\n          // post info to API\r\n          const response = await fetch('/report/submitReport', {\r\n            method: 'POST',\r\n            headers: {\r\n              'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n              defendant: this.props.profile,\r\n              postId: this.props.id,\r\n              reportDate: new Date(),\r\n              rulesReported: rulesReported,\r\n              reportedBy: localStorage.getItem('plumUser56010')\r\n            })\r\n          })\r\n          const body = await response.text()\r\n          if (body === 'success') {\r\n            this.setState({\r\n              submitted: true\r\n            })\r\n          } else {\r\n            this.setState({\r\n              reportFailed: true\r\n            })\r\n          }\r\n          reportErrorMessage.style.display = 'none'\r\n        } else {\r\n          // if none selected, display error message.\r\n          reportErrorMessage.style.display = 'inline'\r\n        }\r\n      }\r\n    } else {\r\n      // comment report handler\r\n      // comment contains rules 1, 2, 3, 5\r\n      const reportRule1 = document.getElementById(\"reportRule1\" + this.props.id)\r\n      const reportRule2 = document.getElementById(\"reportRule2\" + this.props.id)\r\n      const reportRule3 = document.getElementById(\"reportRule3\" + this.props.id)\r\n      const reportRule5 = document.getElementById(\"reportRule5\" + this.props.id)\r\n\r\n      let rulesReported = []\r\n      if (reportRule1.checked) {\r\n        rulesReported.push(1)\r\n      }\r\n      if (reportRule2.checked) {\r\n        rulesReported.push(2)\r\n      }\r\n      if (reportRule3.checked) {\r\n        rulesReported.push(3)\r\n      }\r\n      if (reportRule5.checked) {\r\n        rulesReported.push(5)\r\n      }\r\n\r\n      if (rulesReported.length > 0) {\r\n        // if rulesReported contains some, push the report.\r\n        // post info to API\r\n        const response = await fetch('/report/submitReport', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify({\r\n            defendant: this.props.profile,\r\n            commentId: this.props.id,\r\n            reportDate: new Date(),\r\n            rulesReported: rulesReported,\r\n            reportedBy: localStorage.getItem('plumUser56010')\r\n          })\r\n        })\r\n        const body = await response.text()\r\n        if (body === 'success') {\r\n          this.setState({\r\n            submitted: true\r\n          })\r\n        } else {\r\n          this.setState({\r\n            reportFailed: true\r\n          })\r\n        }\r\n        reportErrorMessage.style.display = 'none'\r\n      } else {\r\n        // if none selected, display error message.\r\n        reportErrorMessage.style.display = 'inline'\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  render() {\r\n    if (this.state.submitted) {\r\n      return (\r\n        <div>\r\n          Every report is reviewed by a human, we take your report seriously. Thank You!\r\n        </div>\r\n      )\r\n    }\r\n\r\n    if (this.state.reportFailed) {\r\n      return (\r\n        <div>\r\n          Report failed. Please try again later.\r\n        </div>\r\n      )\r\n    }\r\n    if (this.props.isPost && !this.props.nsfw) {\r\n      return (\r\n        // normal post\r\n        <div>\r\n          Which rules has this post broken?\r\n          <br />\r\n          Select all that apply:\r\n          <div className=\"form-check\">\r\n            <input className=\"form-check-input\" type=\"checkbox\" value=\"\" id={\"reportRule1\" + this.props.id} />\r\n            <label className=\"form-check-label\" htmlFor={\"reportRule1\" + this.props.id}>\r\n              Inappropriate content involving minor(s)\r\n            </label>\r\n          </div>\r\n          <div className=\"form-check\">\r\n            <input className=\"form-check-input\" type=\"checkbox\" value=\"\" id={\"reportRule2\" + this.props.id} />\r\n            <label className=\"form-check-label\" htmlFor={\"reportRule2\" + this.props.id}>\r\n              Content containing abusive, harmful or illegal behavior\r\n            </label>\r\n          </div>\r\n          <div className=\"form-check\">\r\n            <input className=\"form-check-input\" type=\"checkbox\" value=\"\" id={\"reportRule3\" + this.props.id} />\r\n            <label className=\"form-check-label\" htmlFor={\"reportRule3\" + this.props.id}>\r\n              Offensive language i.e. threats, obscene racism\r\n            </label>\r\n          </div>\r\n          <div className=\"form-check\">\r\n            <input className=\"form-check-input\" type=\"checkbox\" value=\"\" id={\"reportRule4\" + this.props.id} />\r\n            <label className=\"form-check-label\" htmlFor={\"reportRule4\" + this.props.id}>\r\n              Inappropriate/sexual content (missing NSFW tag)\r\n            </label>\r\n          </div>\r\n          <div className=\"form-check\">\r\n            <input className=\"form-check-input\" type=\"checkbox\" value=\"\" id={\"reportRule5\" + this.props.id} />\r\n            <label className=\"form-check-label\" htmlFor={\"reportRule5\" + this.props.id}>\r\n              Spam, scamming or phishing\r\n            </label>\r\n          </div>\r\n          <div id={\"reportError\" + this.props.id} style={{color: 'red', display: 'none'}}>\r\n            You must select at least one rule to report. <br />\r\n          </div>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-secondary reportButton\"\r\n            onClick={this.handleReport}\r\n          >\r\n            Report\r\n          </button>\r\n          <div id=\"mustBeSignedIn\" style={{display: 'none'}}>\r\n            <br />\r\n            You must be signed in to perform this action. &nbsp;\r\n            <a href=\"/login\">Sign in here.</a>\r\n          </div>\r\n        </div>\r\n      )\r\n    } else if (this.props.isPost && this.props.nsfw) {\r\n      // nsfw post\r\n      return (\r\n        <div>\r\n          Which rules has this post broken?\r\n          <br />\r\n          Select all that apply:\r\n          <div className=\"form-check\">\r\n            <input className=\"form-check-input\" type=\"checkbox\" value=\"\" id={\"reportRule1\" + this.props.id} />\r\n            <label className=\"form-check-label\" htmlFor={\"reportRule1\" + this.props.id}>\r\n              Inappropriate content involving minor(s)\r\n            </label>\r\n          </div>\r\n          <div className=\"form-check\">\r\n            <input className=\"form-check-input\" type=\"checkbox\" value=\"\" id={\"reportRule2\" + this.props.id} />\r\n            <label className=\"form-check-label\" htmlFor={\"reportRule2\" + this.props.id}>\r\n              Content containing abusive, harmful or illegal behavior\r\n            </label>\r\n          </div>\r\n          <div className=\"form-check\">\r\n            <input className=\"form-check-input\" type=\"checkbox\" value=\"\" id={\"reportRule5\" + this.props.id} />\r\n            <label className=\"form-check-label\" htmlFor={\"reportRule5\" + this.props.id}>\r\n              Spam, scamming or phishing\r\n            </label>\r\n          </div>\r\n          <div id={\"reportError\" + this.props.id} style={{color: 'red', display: 'none'}}>\r\n            You must select at least one rule to report. <br />\r\n          </div>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-secondary reportButton\"\r\n            onClick={this.handleReport}\r\n          >\r\n            Report\r\n          </button>\r\n          <div id=\"mustBeSignedIn\" style={{display: 'none'}}>\r\n            <br />\r\n            You must be signed in to perform this action. &nbsp;\r\n            <a href=\"/login\">Sign in here.</a>\r\n          </div>\r\n        </div>\r\n      )\r\n    } else {\r\n      // comment report\r\n      return (\r\n        <div>\r\n          Which rules has this comment broken?\r\n          <br />\r\n          Select all that apply:\r\n          <div className=\"form-check\">\r\n            <input className=\"form-check-input\" type=\"checkbox\" value=\"\" id={\"reportRule1\" + this.props.id} />\r\n            <label className=\"form-check-label\" htmlFor={\"reportRule1\" + this.props.id}>\r\n              Inappropriate content involving minor(s)\r\n            </label>\r\n          </div>\r\n          <div className=\"form-check\">\r\n            <input className=\"form-check-input\" type=\"checkbox\" value=\"\" id={\"reportRule2\" + this.props.id} />\r\n            <label className=\"form-check-label\" htmlFor={\"reportRule2\" + this.props.id}>\r\n              Content containing abusive, harmful or illegal behavior\r\n            </label>\r\n          </div>\r\n          <div className=\"form-check\">\r\n            <input className=\"form-check-input\" type=\"checkbox\" value=\"\" id={\"reportRule3\" + this.props.id} />\r\n            <label className=\"form-check-label\" htmlFor={\"reportRule3\" + this.props.id}>\r\n              Offensive language i.e. threats, obscene racism\r\n            </label>\r\n          </div>\r\n          <div className=\"form-check\">\r\n            <input className=\"form-check-input\" type=\"checkbox\" value=\"\" id={\"reportRule5\" + this.props.id} />\r\n            <label className=\"form-check-label\" htmlFor={\"reportRule5\" + this.props.id}>\r\n              Spam, scamming or phishing\r\n            </label>\r\n          </div>\r\n          <div id={\"reportError\" + this.props.id} style={{color: 'red', display: 'none'}}>\r\n            You must select at least one rule to report. <br />\r\n          </div>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-outline-secondary reportButton\"\r\n            onClick={this.handleReport}\r\n          >\r\n            Report\r\n          </button>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nexport default ReportForm;\r\n","import React, { Component } from 'react';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport ReportForm from './ReportForm';\r\n\r\n// liked vs not liked thumbs ups\r\nconst NOT_LIKED = ['far', 'thumbs-up']\r\nconst LIKED = ['fas', 'thumbs-up']\r\n\r\nclass Comment extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      username: this.props.username,\r\n      profileImage: this.props.profileImage,\r\n      content: this.props.content,\r\n      profileLink: this.props.profileLink,\r\n      likes: this.props.likes.length,\r\n      replies: this.props.replies,\r\n      id: this.props.commentId,\r\n      commentLikeIcon: NOT_LIKED,\r\n      repliesLoaded: false,\r\n      likeOrLiked: 'Like', // text next to thumbs up\r\n      likeOrLikes: this.props.likes.length === 1 ? 'Like' : 'Likes', // like count plural/singular\r\n      replyDepth: this.props.replyDepth || 0,\r\n      replyingTo: this.props.replyingTo || ''\r\n    }\r\n    this.retrieveProfileImage(this.props.username)\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.checkIfLikedByUser()\r\n    this.checkMarginBarrier()\r\n    this.checkIfCommentBelongsToUser()\r\n  }\r\n\r\n  // check if comment belongs to user\r\n  checkIfCommentBelongsToUser = () => {\r\n    if (this.props.username === localStorage.getItem('plumUser56010')) {\r\n      // add delete button to the comment\r\n      const deleteButton = document.getElementById(\r\n                           \"commentDeleteButton\" + this.state.id)\r\n      deleteButton.style.display = 'inline'\r\n    }\r\n  }\r\n\r\n  // check if left margin is past max. If so, set to max.\r\n  // this ensures comment reply chains that go deep don't become unreadable\r\n  checkMarginBarrier = () =>  {\r\n    const thisComment = document.getElementById(this.state.id)\r\n\r\n    if (this.props.isReply) {\r\n      thisComment.style.marginLeft = -20 + 'px'\r\n      thisComment.style.marginTop = 10 + 'px'\r\n      //thisComment.style.borderLeft = '1px solid grey'\r\n    }\r\n\r\n    if (this.state.replyDepth >= 3) {\r\n      // negate the margin\r\n      thisComment.style.marginLeft = -44 + 'px'\r\n    }\r\n\r\n    if (this.state.replyDepth >= 4) {\r\n      thisComment.style.marginLeft = -55 + 'px'\r\n    }\r\n\r\n  }\r\n\r\n  // check if this comment was liked by the viewing user\r\n  checkIfLikedByUser = async () => {\r\n    if (this.props.likedCommentsByUser.includes(this.props.commentId)) {\r\n      this.setState({\r\n        commentLikeIcon: LIKED,\r\n        likeOrLiked: 'Liked'\r\n      })\r\n    }\r\n  }\r\n\r\n  // function to retrieve profile image (for each comment)\r\n  retrieveProfileImage = async (user) => {\r\n    try {\r\n      const response =\r\n        await fetch('/profile/retrieveProfileImage/' + user)\r\n      const body = await response.text()\r\n      this.setState({\r\n        profileImage: body\r\n      })\r\n    } catch(err) {\r\n      console.error(err)\r\n    }\r\n  }\r\n\r\n  // when user likes or dislikes a comment\r\n  likeComment = async () => {\r\n    if (!localStorage.getItem('plumUser56010')) {\r\n      alert(\"You must be signed in to perform this action.\")\r\n      return\r\n    }\r\n    let liked\r\n    if (this.state.commentLikeIcon === NOT_LIKED) {\r\n      await this.setState({\r\n        commentLikeIcon: LIKED,\r\n        likeOrLiked: 'Liked',\r\n        likeOrLikes: (this.state.likes + 1) === 1 ? 'Like' : 'Likes',\r\n        likes: this.state.likes + 1\r\n      })\r\n      liked = true\r\n    } else {\r\n      await this.setState({\r\n        commentLikeIcon: NOT_LIKED,\r\n        likeOrLiked: 'Like',\r\n        likeOrLikes: (this.state.likes - 1) === 1 ? 'Like' : 'Likes',\r\n        likes: this.state.likes - 1\r\n      })\r\n      liked = false\r\n    }\r\n    // add/remove comment to/from likedComments on profile\r\n    // get comment, increase or decrease like count by 1\r\n    const response = await fetch('/comments/userLiked', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        commentId: this.state.id,\r\n        liked: liked,\r\n        likedBy: localStorage.getItem('plumUser56010'),\r\n        token: localStorage.getItem('token')\r\n      })\r\n    })\r\n    const body = await response.text()\r\n    if (body !== \"success\") {\r\n      if (liked) {\r\n        this.setState({\r\n          likes: this.state.likes - 1\r\n        })\r\n      } else {\r\n        this.setState({\r\n          likes: this.state.likes + 1\r\n        })\r\n      }\r\n      alert(\"failed to like comment. Please check connection and try again.\")\r\n    }\r\n\r\n  }\r\n\r\n  // when user wants to show or hide replies on a specific comment\r\n  displayReplies = async () => {\r\n    const commentReplies = document.getElementById(\"commentReplies\" + this.state.id)\r\n    const caretDown = document.getElementById(\"commentsCaretDown\" + this.state.id);\r\n    const caretUp = document.getElementById(\"commentsCaretUp\" + this.state.id);\r\n    if (caretUp.style.display === 'inline') {\r\n      commentReplies.style.display = 'none'\r\n      caretDown.style.display = 'inline'\r\n      caretUp.style.display = 'none'\r\n    } else {\r\n      commentReplies.style.display = 'inline'\r\n      caretDown.style.display = 'none'\r\n      caretUp.style.display = 'inline'\r\n      this.retrieveCommentReplies()\r\n    }\r\n  }\r\n\r\n  // reply to comment button clicked\r\n  replyToComment = async () => {\r\n    const commentReplyForm = document.getElementById(\"commentReplyForm\" + this.state.id);\r\n    if (commentReplyForm.style.display === 'inline') {\r\n      commentReplyForm.style.display = 'none'\r\n    } else {\r\n      commentReplyForm.style.display = 'inline'\r\n    }\r\n  }\r\n\r\n  // function to enable/disable button based on if comment text exists\r\n  enableButton = () => {\r\n    const replyToCommentTextarea = document.getElementById(\"replyToCommentTextarea\" + this.state.id);\r\n    const postCommentReplyButton = document.getElementById(\"postCommentReplyButton\" + this.state.id);\r\n    if (replyToCommentTextarea.value.length > 0) {\r\n      postCommentReplyButton.disabled = false;\r\n      postCommentReplyButton.addEventListener(\r\n        \"click\", this.handleCommentReplyPost, false\r\n      );\r\n    } else {\r\n      postCommentReplyButton.disabled = true;\r\n      postCommentReplyButton.removeEventListener(\r\n        \"click\", this.handleCommentReplyPost, false\r\n      );\r\n    }\r\n  }\r\n\r\n  // function to retrieve comments for this post\r\n  retrieveComments = async () => {\r\n    const postId = this.state.post._id\r\n    const response = await fetch('/comments/' + postId)\r\n    const body = await response.text()\r\n    if (body) {\r\n      const parsedBody = JSON.parse(body)\r\n      // reset text area to empty and notify user of comment post\r\n      let commentsArr = []\r\n      for (let i in parsedBody) {\r\n        await commentsArr.push({\r\n          profile: parsedBody[i].profile,\r\n          content: parsedBody[i].content,\r\n          likes: parsedBody[i].likes,\r\n          replies: parsedBody[i].replies,\r\n          id: parsedBody[i]._id\r\n        })\r\n      }\r\n      this.setState({\r\n        comments: commentsArr\r\n      })\r\n    } else {\r\n      alert(\"failed to retrieve comments.\")\r\n    }\r\n  }\r\n\r\n  // function to handle posting of a comment (reply)\r\n  handleCommentReplyPost = async () => {\r\n    if (!localStorage.getItem('plumUser56010')) {\r\n      alert('You must be signed in to perform this action.')\r\n      return\r\n    }\r\n    const replyToCommentTextarea = document.getElementById(\"replyToCommentTextarea\" + this.state.id)\r\n    const postCommentReplyButton = document.getElementById(\"postCommentReplyButton\" + this.state.id)\r\n    console.log('here')\r\n    const response = await fetch('/comments/reply', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        commentText: replyToCommentTextarea.value,\r\n        commentToAddReply: this.state.id,\r\n        user: localStorage.getItem('plumUser56010'),\r\n        token: localStorage.getItem('token')\r\n      })\r\n    })\r\n    const body = await response.text()\r\n    console.log('body: ' + body)\r\n    if (body === \"success\") {\r\n      // reset text area to empty and notify user of comment post\r\n      console.log('comment posted')\r\n      // reset and remove comment reply form after successful post\r\n      replyToCommentTextarea.value = ''\r\n      postCommentReplyButton.disabled = true\r\n      replyToCommentTextarea.style.display = 'none'\r\n      postCommentReplyButton.style.display = 'none'\r\n      this.retrieveCommentReplies()\r\n    } else {\r\n      alert(\"failed to post comment. Please check connection and try again.\")\r\n    }\r\n  }\r\n\r\n  // function to retrieve replies for this comment\r\n  retrieveCommentReplies = async () => {\r\n    const commentId = this.state.id\r\n    const response = await fetch('/comments/replies/' + commentId)\r\n    const body = await response.text()\r\n    if (body) {\r\n      const parsedBody = JSON.parse(body)\r\n      let commentsArr = []\r\n      for (let i in parsedBody) {\r\n        await commentsArr.push({\r\n          profile: parsedBody[i].profile,\r\n          content: parsedBody[i].content,\r\n          likes: parsedBody[i].likes,\r\n          replies: parsedBody[i].replies,\r\n          id: parsedBody[i]._id\r\n        })\r\n      }\r\n      await this.setState({\r\n        replies: commentsArr,\r\n        repliesLoaded: true\r\n      })\r\n    } else {\r\n      alert(\"failed to retrieve replies.\")\r\n    }\r\n  }\r\n\r\n  // button clicked to show/hide report comment options\r\n  reportComment = () => {\r\n    const reportForm = document.getElementById(\"reportForm\" + this.state.id)\r\n    const thisComment = document.getElementById(this.state.id)\r\n\r\n    if (reportForm.style.display === 'inline') {\r\n      reportForm.style.display = 'none'\r\n      if (this.state.replyDepth >= 4) {\r\n        // 55\r\n        thisComment.style.marginLeft = -55 + 'px'\r\n      } else if (this.state.replyDepth >= 3) {\r\n        // 44\r\n        thisComment.style.marginLeft = -44 + 'px'\r\n      } else if (this.state.isReply) {\r\n        thisComment.style.marginLeft = -20 + 'px'\r\n      }\r\n    } else {\r\n      reportForm.style.display = 'inline'\r\n      thisComment.style.marginLeft = 0 + 'px'\r\n    }\r\n  }\r\n\r\n  // delete comment (only owner can do so)\r\n  deleteComment = async () => {\r\n    // request API to delete this comment\r\n    const response = await fetch('/comments/deleteComment', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        user: localStorage.getItem('plumUser56010'),\r\n        token: localStorage.getItem('token'),\r\n        commentId: this.state.id,\r\n        postId: this.props.postId\r\n      })\r\n    })\r\n    const body = await response.text()\r\n    if (body !== \"success\"){\r\n      alert(\"Deleting comment failed. Try again.\")\r\n    } else {\r\n      console.log('deleted')\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let content = this.state.content\r\n\r\n    // reply comment prestring\r\n    let preReplyString = ''\r\n    if (this.state.replyingTo) {\r\n      preReplyString = '@' + this.state.replyingTo + ' '\r\n    }\r\n\r\n    // plural or singular check for counters\r\n    let replyOrReplies = ''\r\n    if (this.state.replies.length === 1) {\r\n      replyOrReplies = 'Reply'\r\n    } else {\r\n      replyOrReplies = 'Replies'\r\n    }\r\n\r\n    let newLine\r\n    if (!this.props.isTimeline) {\r\n      newLine = <br />\r\n    }\r\n    if (this.state.repliesLoaded) {\r\n      return (\r\n        <div className=\"media comment\" id={this.state.id}>\r\n          <a href={this.state.profileLink}>\r\n            <img\r\n              id=\"searchResultPic\"\r\n              src= {\r\n                this.state.profileImage\r\n              }\r\n              className=\"mr-3\"\r\n              alt=\"profile\"\r\n            />\r\n          </a>\r\n          <div className=\"media-body\" id=\"profilePreviewDetails\">\r\n            <a href={this.state.profileLink} style={{color: ''}}>\r\n              <h6 className=\"mt-0 mb-0\" id=\"profilePreviewName\">\r\n                {this.state.username}\r\n              </h6>\r\n            </a>\r\n            {newLine}\r\n            {preReplyString}{content} <br />\r\n            <button\r\n              className=\"commentActionButton\"\r\n              id={\"commentLikeButton\" + this.state.id}\r\n              onClick={this.likeComment}\r\n              style={localStorage.getItem('darkMode') === 'true' ? {color: '#b5b5b5'} : {color: 'black'}}\r\n            >\r\n              <FontAwesomeIcon\r\n                icon={this.state.commentLikeIcon}\r\n              />\r\n                {this.state.likeOrLiked}\r\n            </button>\r\n            {this.state.likes} {this.state.likeOrLikes}\r\n            <button\r\n              className=\"commentActionButton\"\r\n              id=\"displayRepliesButton\"\r\n              onClick={this.displayReplies}\r\n              style={localStorage.getItem('darkMode') === 'true' ? {color: '#b5b5b5'} : {color: 'black'}}\r\n            >\r\n            {this.state.replies.length + ' ' + replyOrReplies}\r\n            < FontAwesomeIcon\r\n              icon=\"caret-down\"\r\n              className=\"commentsCaretDown\"\r\n              id={\"commentsCaretDown\" + this.state.id}\r\n            />\r\n            < FontAwesomeIcon\r\n              icon=\"caret-up\"\r\n              className=\"commentsCaretUp\"\r\n              id={\"commentsCaretUp\" + this.state.id}\r\n            />\r\n            </button>\r\n            <button\r\n              className=\"commentActionButton\"\r\n              id=\"replyToCommentButton\"\r\n              onClick={this.replyToComment}\r\n              style={localStorage.getItem('darkMode') === 'true' ? {color: '#b5b5b5'} : {color: 'black'}}\r\n            >\r\n              Reply\r\n            </button>\r\n            <button\r\n              className=\"commentActionButton\"\r\n              id=\"commentReportButton\"\r\n              onClick={this.reportComment}\r\n              style={localStorage.getItem('darkMode') === 'true' ? {color: '#b5b5b5'} : {color: 'black'}}\r\n            >\r\n            Report\r\n            </button>\r\n            <button\r\n              className=\"commentActionButton\"\r\n              id={\"commentDeleteButton\" + this.state.id}\r\n              onClick={this.deleteComment}\r\n              style={{color: '#c91616', display: 'none', marginLeft: '5px', width: '20px'}}\r\n            >\r\n            <FontAwesomeIcon icon={['fas', 'trash-alt']} />\r\n            </button>\r\n            <br />\r\n            <div\r\n              id={\"reportForm\" + this.state.id}\r\n              style={{display: 'none'}}\r\n            >\r\n              <ReportForm\r\n                isPost={false}\r\n                id={this.state.id}\r\n                profile={this.state.username}\r\n              />\r\n              <br />\r\n            </div>\r\n            <div\r\n              id={\"commentReplyForm\" + this.state.id}\r\n              className=\"commentReplyForm\"\r\n            >\r\n\r\n              <textarea\r\n                id={\"replyToCommentTextarea\" + this.state.id}\r\n                className=\"form-control\"\r\n                placeholder=\"Reply to comment...\"\r\n                rows=\"2\"\r\n                onChange={this.enableButton}\r\n              />\r\n              <button\r\n                type=\"button\"\r\n                id={\"postCommentReplyButton\" + this.state.id}\r\n                className=\"btn btn-primary\"\r\n                disabled={true}\r\n              >\r\n              Post reply\r\n              </button>\r\n              <br />\r\n            </div>\r\n            <div\r\n              id={\"commentReplies\" + this.state.id}\r\n              className=\"commentReplies\"\r\n            >\r\n            {this.state.replies.map((comment, i) => (\r\n                <Comment\r\n                  username={comment.profile}\r\n                  content={comment.content}\r\n                  profileLink={\"/profile/\" + comment.profile}\r\n                  likes={comment.likes}\r\n                  replies={comment.replies}\r\n                  commentId={comment.id}\r\n                  isReply={true}\r\n                  replyDepth={this.state.replyDepth + 1}\r\n                  replyingTo={this.state.username}\r\n                  likedCommentsByUser={this.props.likedCommentsByUser}\r\n                  postId={this.props.postId}\r\n                  key={i}\r\n                />\r\n            ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )\r\n    } else {\r\n      return (\r\n        <div className=\"media comment\" id={this.state.id}>\r\n          <a href={this.state.profileLink}>\r\n            <img\r\n              id=\"searchResultPic\"\r\n              src= {\r\n                this.state.profileImage\r\n              }\r\n              className=\"mr-3\"\r\n              alt=\"profile\"\r\n            />\r\n          </a>\r\n          <div className=\"media-body\" id=\"profilePreviewDetails\">\r\n            <a href={this.state.profileLink}>\r\n              <h6 className=\"mt-0 mb-0\" id=\"profilePreviewName\">\r\n                {this.state.username}\r\n              </h6>\r\n            </a>\r\n            {newLine}\r\n            {preReplyString}{content} <br />\r\n            <button\r\n              className=\"commentActionButton\"\r\n              id=\"commentLikeButton\"\r\n              onClick={this.likeComment}\r\n              style={localStorage.getItem('darkMode') === 'true' ? {color: '#b5b5b5'} : {color: 'black'}}\r\n            >\r\n              < FontAwesomeIcon icon={this.state.commentLikeIcon} />\r\n              {this.state.likeOrLiked}\r\n            </button>\r\n            {this.state.likes} {this.state.likeOrLikes}\r\n            <button\r\n              className=\"commentActionButton\"\r\n              id=\"displayRepliesButton\"\r\n              onClick={this.displayReplies}\r\n              style={localStorage.getItem('darkMode') === 'true' ? {color: '#b5b5b5'} : {color: 'black'}}\r\n            >\r\n            {this.state.replies.length + ' ' + replyOrReplies}\r\n            < FontAwesomeIcon\r\n              icon=\"caret-down\"\r\n              className=\"commentsCaretDown\"\r\n              id={\"commentsCaretDown\" + this.state.id}\r\n            />\r\n            < FontAwesomeIcon\r\n              icon=\"caret-up\"\r\n              className=\"commentsCaretUp\"\r\n              id={\"commentsCaretUp\" + this.state.id}\r\n            />\r\n            </button>\r\n            <button\r\n              className=\"commentActionButton\"\r\n              id=\"replyToCommentButton\"\r\n              onClick={this.replyToComment}\r\n              style={localStorage.getItem('darkMode') === 'true' ? {color: '#b5b5b5'} : {color: 'black'}}\r\n            >\r\n              Reply\r\n            </button>\r\n            <button\r\n              className=\"commentActionButton\"\r\n              id=\"commentReportButton\"\r\n              onClick={this.reportComment}\r\n              style={localStorage.getItem('darkMode') === 'true' ? {color: '#b5b5b5'} : {color: 'black'}}\r\n            >\r\n            Report\r\n            </button>\r\n            <button\r\n              className=\"commentActionButton\"\r\n              id={\"commentDeleteButton\" + this.state.id}\r\n              onClick={this.deleteComment}\r\n              style={{color: '#c91616', display: 'none', marginLeft: '5px', width: '20px'}}\r\n            >\r\n            <FontAwesomeIcon icon={['fas', 'trash-alt']} />\r\n            </button>\r\n            <br />\r\n            <div\r\n              id={\"reportForm\" + this.state.id}\r\n              style={{display: 'none'}}\r\n            >\r\n              <ReportForm\r\n                isPost={false}\r\n                id={this.state.id}\r\n                profile={this.state.username}\r\n              />\r\n              <br />\r\n            </div>\r\n            <div\r\n              id={\"commentReplyForm\" + this.state.id}\r\n              className=\"commentReplyForm\"\r\n            >\r\n\r\n              <textarea\r\n                id={\"replyToCommentTextarea\" + this.state.id}\r\n                className=\"form-control\"\r\n                placeholder=\"Reply to comment...\"\r\n                rows=\"2\"\r\n                onChange={this.enableButton}\r\n              />\r\n              <button\r\n                type=\"button\"\r\n                id={\"postCommentReplyButton\" + this.state.id}\r\n                className=\"btn btn-primary\"\r\n                disabled={true}\r\n              >\r\n              Post reply\r\n              </button>\r\n              <br />\r\n            </div>\r\n            <div\r\n              id={\"commentReplies\" + this.state.id}\r\n              className=\"commentReplies\"\r\n            >\r\n              Loading replies...\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nexport default Comment;\r\n","import React, { Component } from 'react';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport Comment from './Comment';\r\nimport { HashLink as Link } from 'react-router-hash-link';\r\n\r\nclass CommentsSection extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      post: this.props.post,\r\n      numComments: this.props.post.comments.length,\r\n      comments: [],\r\n      // boolean, tells whether comments section is on profile\r\n      isFromProfile: this.props.isFromProfile,\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (!this.state.isFromProfile) {\r\n      this.displayComments()\r\n    }\r\n  }\r\n\r\n  async componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (this.props.post !== prevProps.post) {\r\n      await this.setState({\r\n        post: this.props.post,\r\n        comments: [],\r\n        numComments: this.props.post.comments.length,\r\n      })\r\n      this.retrieveComments()\r\n    }\r\n  }\r\n\r\n  // function to display comments upon click\r\n  displayComments = async () => {\r\n    const caretDown = document.getElementById(\"commentsCaretDown\" + this.props.post._id);\r\n    const caretUp = document.getElementById(\"commentsCaretUp\" + this.props.post._id);\r\n    const commentsSection = document.getElementById(\"commentsSection\" + this.props.post._id);\r\n    if (caretUp.style.display === 'inline') {\r\n      caretDown.style.display = 'inline'\r\n      caretUp.style.display = 'none'\r\n      commentsSection.style.display = 'none'\r\n    } else {\r\n      caretDown.style.display = 'none'\r\n      caretUp.style.display = 'inline'\r\n      commentsSection.style.display = 'inline'\r\n      this.retrieveComments()\r\n    }\r\n  }\r\n\r\n  // function to retrieve comments for this post\r\n  retrieveComments = async () => {\r\n    const postId = this.state.post._id\r\n    const response = await fetch('/comments/' + postId)\r\n    const body = await response.text()\r\n    if (body) {\r\n      const parsedBody = JSON.parse(body)\r\n      // reset text area to empty and notify user of comment post\r\n      let commentsArr = []\r\n      for (let i in parsedBody) {\r\n        await commentsArr.push({\r\n          profile: parsedBody[i].profile,\r\n          content: parsedBody[i].content,\r\n          likes: parsedBody[i].likes,\r\n          replies: parsedBody[i].replies,\r\n          id: parsedBody[i]._id\r\n        })\r\n      }\r\n      this.setState({\r\n        comments: commentsArr\r\n      })\r\n    } else {\r\n      alert(\"failed to retrieve comments.\")\r\n    }\r\n  }\r\n\r\n  // function to enable/disable button based on if comment text exists\r\n  enableButton = () => {\r\n    const commentTextarea = document.getElementById(\"commentTextarea\" + this.props.post._id);\r\n    const postCommentButton = document.getElementById(\"postCommentButton\" + this.props.post._id);\r\n    if (commentTextarea.value.length > 0) {\r\n      postCommentButton.disabled = false;\r\n      postCommentButton.addEventListener(\r\n        \"click\", this.handleCommentPost, false\r\n      );\r\n    } else {\r\n      postCommentButton.disabled = true;\r\n      postCommentButton.removeEventListener(\r\n        \"click\", this.handleCommentPost, false\r\n      );\r\n    }\r\n  }\r\n\r\n\r\n  // function to handle posting of a comment\r\n  handleCommentPost = async () => {\r\n    if (!localStorage.getItem('plumUser56010')) {\r\n      const mustBeSignedInCommentPost = document.getElementById(\"mustBeSignedInCommentPost\" + this.props.post._id)\r\n      mustBeSignedInCommentPost.style.display = 'inline'\r\n      return\r\n    }\r\n    const commentTextarea = document.getElementById(\"commentTextarea\" + this.props.post._id);\r\n    const response = await fetch('/comments/post', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        commentText: commentTextarea.value,\r\n        postId: this.props.post._id,\r\n        user: localStorage.getItem('plumUser56010'),\r\n        token: localStorage.getItem('token')\r\n      })\r\n    })\r\n    const body = await response.text()\r\n    console.log('body: ' + body)\r\n    if (body === \"success\") {\r\n      // reset text area to empty and notify user of comment post\r\n      console.log('comment posted')\r\n      commentTextarea.value = ''\r\n      this.setState({\r\n        numComments: this.state.numComments + 1\r\n      })\r\n      this.retrieveComments()\r\n    } else {\r\n      alert(\"failed to post comment. Please try again.\")\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (this.state.isFromProfile && !this.props.isTimeline) {\r\n      return (\r\n        <div id=\"commentsLink\" className=\"commentsLink\">\r\n          <Link\r\n            to={\r\n              \"/profile/\" + this.state.post.profile\r\n              + '/' + this.state.post.postId\r\n              + \"#commentsButton\"\r\n            }\r\n          >\r\n            {this.state.post.comments.length} comments\r\n          </Link>\r\n        </div>\r\n      )\r\n    }\r\n    return (\r\n      <div id={\"comments\" + this.props.post._id} className=\"comments\">\r\n        <button\r\n          id={\"commentsButton\" + this.props.post._id}\r\n          className=\"commentsButton\"\r\n          onClick={this.displayComments}\r\n        >\r\n          {this.state.numComments} comments\r\n          < FontAwesomeIcon\r\n            icon=\"caret-down\"\r\n            id={\"commentsCaretDown\" + this.props.post._id}\r\n            className=\"commentsCaretDown\" />\r\n          < FontAwesomeIcon\r\n            icon=\"caret-up\"\r\n            id={\"commentsCaretUp\" + this.props.post._id}\r\n            className=\"commentsCaretUp\" />\r\n        </button>\r\n        <br />\r\n        <div id={\"mustBeSignedInCommentPost\" + this.props.post._id} style={{display: 'none', color: 'red'}}>\r\n          <br />\r\n          You must be signed in to perform this action. &nbsp;\r\n          <a href=\"/login\">Sign in here.</a>\r\n        </div>\r\n        <div id={\"commentsSection\" + this.props.post._id} className=\"commentsSection\" >\r\n          <textarea\r\n            className=\"form-control commentTextarea\"\r\n            id={\"commentTextarea\" + this.props.post._id}\r\n            placeholder=\"Write a comment...\"\r\n            rows=\"2\"\r\n            onChange={this.enableButton}\r\n          />\r\n          <br />\r\n          <button\r\n            type=\"button\"\r\n            id={\"postCommentButton\" + this.props.post._id}\r\n            className=\"btn btn-primary postCommentButton\"\r\n            disabled={true}\r\n          >\r\n            Post\r\n          </button>\r\n          {this.state.comments.map((comment, i) => (\r\n              <Comment\r\n                username={comment.profile}\r\n                content={comment.content}\r\n                profileLink={\"/profile/\" + comment.profile}\r\n                likes={comment.likes}\r\n                replies={comment.replies}\r\n                commentId={comment.id}\r\n                likedCommentsByUser={this.props.likedCommentsByUser}\r\n                key={i}\r\n                isTimeline={this.props.isTimeline}\r\n                postId={this.props.postId}\r\n              />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CommentsSection;\r\n","import React, { Component } from 'react';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport ReportForm from './ReportForm';\r\n\r\nimport {\r\n  FacebookShareButton,\r\n  RedditShareButton,\r\n  TwitterShareButton\r\n} from \"react-share\";\r\n\r\nimport {\r\n  FacebookIcon,\r\n  RedditIcon,\r\n  TwitterIcon\r\n} from \"react-share\";\r\n\r\n// liked vs not liked thumbs ups\r\nconst NOT_LIKED = ['far', 'thumbs-up']\r\nconst LIKED = ['fas', 'thumbs-up']\r\n\r\n// base url for site\r\nconst SITE_BASE_URL = 'localhost:3000'\r\n\r\nclass PostActions extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    const linkForSharing = SITE_BASE_URL + '/profile/' + this.props.post.profile\r\n                          + '/' + this.props.post.postId\r\n    this.state = {\r\n      post: this.props.post,\r\n      postLikeIcon: NOT_LIKED,\r\n      likedPostsByUser: this.props.likedPostsByUser,\r\n      likes: this.props.post.likes.length,\r\n      likeOrLiked: 'Like',\r\n      likeOrLikes: this.props.post.likes.length === 1 ? 'Like' : 'Likes', // like count plural/singular\r\n      linkToSharePost: linkForSharing\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.checkIfLikedByUser()\r\n    this.checkIfPostBelongsToUser()\r\n    this.checkDarkMode()\r\n  }\r\n\r\n  async componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (this.props.post !== prevProps.post) {\r\n      await this.setState({\r\n        post: this.props.post,\r\n        postLikeIcon: NOT_LIKED,\r\n        likedPostsByUser: this.props.likedPostsByUser,\r\n        likes: this.props.post.likes.length,\r\n        likeOrLiked: 'Like',\r\n        likeOrLikes: this.props.post.likes.length === 1 ? 'Like' : 'Likes',\r\n        linkToSharePost: SITE_BASE_URL + '/profile/' + this.props.post.profile\r\n                              + '/' + this.props.post.postId\r\n      })\r\n      this.checkIfLikedByUser()\r\n      this.checkIfPostBelongsToUser()\r\n      // reset all buttons/menus\r\n      const shareOptions = document.getElementById(\"shareOptions\" + this.state.post._id)\r\n      if (shareOptions.style.display === 'inline') {\r\n        shareOptions.style.display = 'none'\r\n      }\r\n      // reset report\r\n      const reportForm = document.getElementById(\"reportForm\" + this.state.post._id)\r\n      if (reportForm.style.display === 'inline') {\r\n        reportForm.style.display = 'none'\r\n      }\r\n      // reset delete confirmation\r\n      this.hideDeleteConfirmation()\r\n    } else if (this.props.likedPostsByUser !== prevProps.likedPostsByUser) {\r\n      this.checkIfLikedByUser()\r\n    }\r\n  }\r\n\r\n  checkDarkMode = async () => {\r\n    const likeButton = document.getElementById(\r\n      \"postLikeButton\" + this.state.post._id\r\n    )\r\n    const shareButton = document.getElementById(\r\n      \"postShareButton\" + this.state.post._id\r\n    )\r\n    const reportButton = document.getElementById(\r\n      \"postReportButton\" + this.state.post._id\r\n    )\r\n    if (localStorage.getItem('darkMode') === 'true') {\r\n      // initiate dark mode\r\n      likeButton.style.color = '#b5b5b5'\r\n      shareButton.style.color = '#b5b5b5'\r\n      reportButton.style.color = '#b5b5b5'\r\n    }\r\n  }\r\n\r\n  // check if this post belongs to this user (for delete)\r\n  checkIfPostBelongsToUser = () => {\r\n    const postDeleteButton = document.getElementById(\"postDeleteButton\" + this.state.post._id)\r\n    if (this.state.post.profile === localStorage.getItem('plumUser56010')) {\r\n      postDeleteButton.style.display = 'inline'\r\n    } else {\r\n      postDeleteButton.style.display = 'none'\r\n    }\r\n  }\r\n\r\n  // check if this comment was liked by the viewing user\r\n  checkIfLikedByUser = () => {\r\n    for (let i in this.props.likedPostsByUser) {\r\n      if (this.props.likedPostsByUser[i]._id === (this.state.post._id)) {\r\n        this.setState({\r\n          postLikeIcon: LIKED,\r\n          likeOrLiked: 'Liked'\r\n        })\r\n        return\r\n      }\r\n    }\r\n  }\r\n\r\n  // when user likes or dislikes a comment\r\n  likePost = async () => {\r\n    // make sure user is signed in\r\n    if (!localStorage.getItem('plumUser56010')) {\r\n      const mustBeSignedIn = document.getElementById(\"mustBeSignedIn\")\r\n      mustBeSignedIn.style.display = 'inline'\r\n      return\r\n    }\r\n\r\n    let liked\r\n    if (this.state.postLikeIcon === NOT_LIKED) {\r\n      await this.setState({\r\n        postLikeIcon: LIKED,\r\n        likeOrLiked: 'Liked',\r\n        likeOrLikes: (this.state.likes + 1) === 1 ? 'Like' : 'Likes',\r\n        likes: this.state.likes + 1\r\n      })\r\n      liked = true\r\n    } else {\r\n      await this.setState({\r\n        postLikeIcon: NOT_LIKED,\r\n        likeOrLiked: 'Like',\r\n        likeOrLikes: (this.state.likes - 1) === 1 ? 'Like' : 'Likes',\r\n        likes: this.state.likes - 1\r\n      })\r\n      liked = false\r\n    }\r\n    // add/remove comment to/from likedComments on profile\r\n    // get comment, increase or decrease like count by 1\r\n    const response = await fetch('/posts/userLiked', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        postId: this.state.post._id,\r\n        liked: liked,\r\n        likedBy: localStorage.getItem('plumUser56010'),\r\n        token: localStorage.getItem('token')\r\n      })\r\n    })\r\n    const body = await response.text()\r\n    if (body !== \"success\") {\r\n      if (liked) {\r\n        this.setState({\r\n          likes: this.state.likes - 1\r\n        })\r\n      } else {\r\n        this.setState({\r\n          likes: this.state.likes + 1\r\n        })\r\n      }\r\n      alert(\"failed to like post. Please check connection and try again.\")\r\n    }\r\n  }\r\n\r\n  // button clicked to show/hide share post options\r\n  sharePost = () => {\r\n    const shareOptions = document.getElementById(\"shareOptions\" + this.state.post._id)\r\n    if (shareOptions.style.display === 'inline') {\r\n      shareOptions.style.display = 'none'\r\n    } else {\r\n      shareOptions.style.display = 'inline'\r\n    }\r\n  }\r\n\r\n  // copy link to specific post (for user to share)\r\n  copyPostLink = async () => {\r\n    const confirmCopy = document.getElementById(\"copiedLinkConfirmationText\" + this.state.post._id)\r\n    const e = document.getElementById(\"linkToSharePost\" + this.state.post._id)\r\n    e.style.display = 'inline'\r\n    e.select()\r\n    e.setSelectionRange(0, 99999); /*For mobile devices*/\r\n    await document.execCommand(\"copy\")\r\n    e.style.display = 'none'\r\n    confirmCopy.style.display = 'inline'\r\n  }\r\n\r\n  // button clicked to show/hide report post options\r\n  reportPost = () => {\r\n    const reportForm = document.getElementById(\"reportForm\" + this.state.post._id)\r\n    if (reportForm.style.display === 'inline') {\r\n      reportForm.style.display = 'none'\r\n    } else {\r\n      reportForm.style.display = 'inline'\r\n    }\r\n  }\r\n\r\n  // show delete post confirmation message\r\n  showDeleteConfirmation = () => {\r\n    const postDeleteConfirmation = document\r\n      .getElementById(\"postDeleteConfirmation\" + this.state.post._id)\r\n    postDeleteConfirmation.style.display = 'inline'\r\n  }\r\n\r\n  // hide delete post confirmation message\r\n  hideDeleteConfirmation = () => {\r\n    const postDeleteConfirmation = document\r\n      .getElementById(\"postDeleteConfirmation\" + this.state.post._id)\r\n    postDeleteConfirmation.style.display = 'none'\r\n  }\r\n\r\n  // delete post (only owner can do this)\r\n  deletePost = async () => {\r\n    // show deleted message\r\n    const postDeletedMessage = document.getElementById(\r\n            \"postDeletedMessage\" + this.state.post._id)\r\n    postDeletedMessage.style.display = 'inline'\r\n    // request API to delete this post\r\n    const response = await fetch('/posts/deletePost/', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        post: this.state.post,\r\n        username: localStorage.getItem('plumUser56010'),\r\n        token: localStorage.getItem('token')\r\n      })\r\n    })\r\n    const body = await response.text()\r\n    if (body !== \"success\"){\r\n      alert(\"Deleting comment failed. Try again.\")\r\n    } else {\r\n      console.log('deleted')\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"postActions\">\r\n        <button\r\n          className=\"commentActionButton postActionButton\"\r\n          id={\"postLikeButton\" + this.state.post._id}\r\n          onClick={this.likePost}\r\n        >\r\n          < FontAwesomeIcon icon={this.state.postLikeIcon} id=\"postLikeIcon\" />\r\n          {this.state.likeOrLiked}\r\n        </button>\r\n        &nbsp;\r\n        <button\r\n          className=\"commentActionButton postActionButton\"\r\n          id={\"postShareButton\" + this.state.post._id}\r\n          onClick={this.sharePost}\r\n        >\r\n          < FontAwesomeIcon icon=\"share\" id=\"postShareIcon\" />\r\n          Share\r\n        </button>\r\n        &nbsp;\r\n        &nbsp;\r\n        <button\r\n          className=\"commentActionButton postActionButton postReportButton\"\r\n          id={\"postReportButton\" + this.state.post._id}\r\n          onClick={this.reportPost}\r\n        >\r\n          < FontAwesomeIcon icon='flag' id=\"postReportIcon\"/>\r\n          Report\r\n        </button>\r\n        <button\r\n          className=\"commentActionButton postActionButton postDeleteButton\"\r\n          id={\"postDeleteButton\" + this.state.post._id}\r\n          onClick={this.showDeleteConfirmation}\r\n          style={{color: '#c91616', marginLeft: '10px', display: 'none', width: '30px'}}\r\n        >\r\n          <FontAwesomeIcon icon={['fas', 'trash-alt']} />\r\n        </button>\r\n        <div\r\n          id={\"postDeleteConfirmation\" + this.state.post._id}\r\n          style={{display: 'none'}}\r\n        >\r\n          <br />\r\n          Are you sure you want to delete this post?\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-danger\"\r\n            onClick={this.deletePost}\r\n            style={{marginRight: '5px'}}\r\n          >\r\n            Yes\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-secondary\"\r\n            onClick={this.hideDeleteConfirmation}\r\n            style={{marginRight: '5px'}}\r\n          >\r\n            No\r\n          </button>\r\n        </div>\r\n        <div\r\n          id={\"postDeletedMessage\" + this.state.post._id}\r\n          style={{display: 'none'}}>\r\n          This post has been deleted.\r\n        </div>\r\n        <div id=\"mustBeSignedIn\" style={{display: 'none'}}>\r\n          <br />\r\n          You must be signed in to perform this action. &nbsp;\r\n          <a href=\"/login\">Sign in here.</a>\r\n        </div>\r\n        <div\r\n          id={\"reportForm\" + this.state.post._id}\r\n          style={{display: 'none'}}\r\n        >\r\n          <br />\r\n          <ReportForm\r\n            isPost={true}\r\n            nsfw={this.state.post.nsfw}\r\n            id={this.state.post._id}\r\n            profile={this.state.post.profile}\r\n          />\r\n        </div>\r\n        <br />\r\n        <div\r\n          id={\"shareOptions\" + this.state.post._id}\r\n          style={{display: 'none'}}\r\n        >\r\n          <button\r\n            className=\"commentActionButton postActionButton\"\r\n            id={\"copyPostLinkButton\" + this.state.post._id}\r\n            onClick={this.copyPostLink}\r\n          >\r\n            <FontAwesomeIcon icon={['far', 'clipboard']} />\r\n            &nbsp; Copy\r\n          </button>\r\n          <TwitterShareButton url={this.state.linkToSharePost}\r\n            className=\"socialMediaShareLink\">\r\n            <TwitterIcon round={true} className=\"socialMediaShareIcon\" />\r\n          </TwitterShareButton>\r\n          <RedditShareButton url={this.state.linkToSharePost}\r\n            className=\"socialMediaShareLink\">\r\n            <RedditIcon round={true} className=\"socialMediaShareIcon\" />\r\n          </RedditShareButton>\r\n          <FacebookShareButton url={this.state.linkToSharePost}\r\n            className=\"socialMediaShareLink\">\r\n            <FacebookIcon round={true} className=\"socialMediaShareIcon\" />\r\n          </FacebookShareButton>\r\n          <br />\r\n          <textarea\r\n            value={this.state.linkToSharePost}\r\n            readOnly={true}\r\n            style={{display: 'none'}}\r\n            id={\"linkToSharePost\" + this.state.post._id}\r\n          />\r\n          <p\r\n            id={\"copiedLinkConfirmationText\" + this.state.post._id}\r\n            style={{display: 'none'}}\r\n          >\r\n            Copied link to clipboard!\r\n            <br />\r\n          </p>\r\n        </div>\r\n        <strong>{this.state.likes} {this.state.likeOrLikes}</strong>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default PostActions;\r\n","import React, { Component } from 'react';\r\nimport '../styles/SpecificPost.css';\r\nimport CommentsSection from './CommentsSection';\r\nimport PostActions from './PostActions';\r\n\r\nconst MINUTES_IN_HOUR = 60\r\nconst HOURS_IN_DAY = 24\r\nconst DAYS_IN_MONTH = 30\r\nconst MONTHS_IN_YEAR = 12\r\n\r\nclass SpecificPost extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      profileImage: '',\r\n      post: this.props.post,\r\n      imageSource: ((!localStorage.getItem('plumUser56010') && this.props.post.nsfw) || (this.props.post.nsfw &&\r\n        (localStorage.getItem('showNsfw') === 'false' ||\r\n        localStorage.getItem('autoShowNsfw') === 'false'))) ?\r\n        '/nsfw_post_in_grid_with_auto_nsfw_off.png' : this.props.post.imageSource\r\n    }\r\n    this.retrieveProfileImage(this.props.post.profile)\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.checkIfTimeline()\r\n    this.checkDarkMode()\r\n    this.checkNsfwStatus()\r\n\r\n    // check if darkmode for background color of posts\r\n    if (localStorage.getItem('darkMode') === 'true') {\r\n      const textPost = document.getElementById(\"specifiedPostContent\" + this.state.post._id)\r\n      textPost.style.background = '#515151'\r\n      const specifiedPostVideo = document.getElementById(\"specifiedPostVideo\" + this.state.post._id)\r\n      specifiedPostVideo.style.background = '#515151'\r\n      specifiedPostVideo.style.borderTop = '2px solid black'\r\n      specifiedPostVideo.style.borderBottom = '2px solid black'\r\n    }\r\n  }\r\n\r\n  checkNsfwStatus = () => {\r\n\r\n    if (this.state.post.nsfw) {\r\n      // if not signed in\r\n      if (!localStorage.getItem('plumUser56010')) {\r\n        this.setState({\r\n          imageSource: '/nsfw_post_not_signed_in.png'\r\n        })\r\n        return\r\n      }\r\n\r\n      if (localStorage.getItem('showNsfw') === 'true') {\r\n        if (localStorage.getItem('autoShowNsfw') === 'false') {\r\n          // show click to show NSFW\r\n          this.setState({\r\n            imageSource: '/nsfw_post_with_nsfw_on_auto_off.png'\r\n          })\r\n        }\r\n      } else {\r\n        // show signed in with nsfw off\r\n        this.setState({\r\n          imageSource: '/nsfw_post_with_nsfw_off.png'\r\n        })\r\n      }\r\n    } else {\r\n      this.setState({\r\n        imageSource: this.props.post.imageSource\r\n      })\r\n    }\r\n  }\r\n\r\n  // check if dark mode is toggled on\r\n  checkDarkMode = async () => {\r\n    const postPic = document.getElementById(\r\n      \"specifiedPostPic\" + this.state.post._id\r\n    );\r\n    if (localStorage.getItem('darkMode') === 'true') {\r\n      // initiate dark mode\r\n      postPic.style.borderTop = '2px solid black'\r\n      postPic.style.borderBottom = '2px solid black'\r\n      postPic.style.background = '#525252'\r\n    }\r\n  }\r\n\r\n  async componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (this.props.post !== prevProps.post) {\r\n      await this.setState({\r\n        post: this.props.post,\r\n        imageSource: ((!localStorage.getItem('plumUser56010') && this.props.post.nsfw) || (this.props.post.nsfw &&\r\n          (localStorage.getItem('showNsfw') === 'false' ||\r\n          localStorage.getItem('autoShowNsfw') === 'false'))) ?\r\n          '/nsfw_post_in_grid_with_auto_nsfw_off.png' : this.props.post.imageSource\r\n      })\r\n      this.retrieveProfileImage(this.props.post.profile)\r\n      this.checkIfTimeline()\r\n      this.checkDarkMode()\r\n      this.checkNsfwStatus()\r\n    }\r\n  }\r\n\r\n  checkIfTimeline = () => {\r\n    const timelineProfileLink = document.getElementById(\"timelineProfileLink\" + this.state.post._id)\r\n    if (this.props.isTimeline) {\r\n      timelineProfileLink.style.display = 'inline'\r\n    }\r\n  }\r\n\r\n  // function to retrieve profile image (for each comment)\r\n  retrieveProfileImage = async (user) => {\r\n    try {\r\n      const response =\r\n        await fetch('/profile/retrieveProfileImage/' + user)\r\n      const body = await response.text()\r\n      this.setState({\r\n        profileImage: body\r\n      })\r\n    } catch(err) {\r\n      console.error(err)\r\n    }\r\n  }\r\n\r\n  // display nsfwImage\r\n  displayNsfwImage = () => {\r\n    if (this.state.post.nsfw) {\r\n      if (localStorage.getItem('showNsfw') === 'true') {\r\n        if (localStorage.getItem('autoShowNsfw') === 'false') {\r\n          // show click to show NSFW\r\n          this.setState({\r\n            imageSource: this.props.post.imageSource\r\n          })\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // unveil a nsfw video\r\n  unveilVideo = () => {\r\n    const video = document.getElementById('video' + this.state.post._id)\r\n    const videoNsfwPic1 = document.getElementById(\"videoNsfwPic1\" + this.state.post._id)\r\n    const videoNsfwPic2 = document.getElementById(\"videoNsfwPic2\" + this.state.post._id)\r\n    const videoNsfwPic3 = document.getElementById(\"videoNsfwPic3\" + this.state.post._id)\r\n    videoNsfwPic1.style.display = 'none'\r\n    videoNsfwPic2.style.display = 'none'\r\n    videoNsfwPic3.style.display = 'none'\r\n    video.style.display = 'block'\r\n  }\r\n\r\n  render() {\r\n    // if data is not loaded, do not render\r\n    if (!this.props.likedPostsByUser && !this.props.isAdmin) {\r\n      return (\r\n        <div\r\n          style={{textAlign: \"center\"}}>\r\n          Loading post...\r\n        </div>\r\n      )\r\n    }\r\n\r\n    const currTime = new Date()\r\n    // getting the time since post (in minutes)\r\n    // and setting the time tag on post\r\n    let timeSincePost =\r\n      (currTime - new Date(this.state.post.creationDate)) / 1000\r\n    timeSincePost /= 60\r\n    timeSincePost = parseInt(timeSincePost)\r\n\r\n    let postTimeTag = ''\r\n    if (timeSincePost < MINUTES_IN_HOUR) {\r\n      postTimeTag = timeSincePost + ' minutes ago'\r\n      if (timeSincePost === 1) {\r\n        postTimeTag = timeSincePost + ' minute ago'\r\n      }\r\n    } else if (timeSincePost < MINUTES_IN_HOUR * HOURS_IN_DAY) {\r\n      const hoursAgo = parseInt(timeSincePost / MINUTES_IN_HOUR)\r\n      postTimeTag = hoursAgo + ' hours ago'\r\n      if (hoursAgo === 1) {\r\n        postTimeTag = hoursAgo + ' hour ago'\r\n      }\r\n    } else if (timeSincePost < MINUTES_IN_HOUR * HOURS_IN_DAY * DAYS_IN_MONTH) {\r\n      const daysAgo = parseInt(\r\n        timeSincePost / MINUTES_IN_HOUR / HOURS_IN_DAY\r\n      )\r\n      postTimeTag = daysAgo + ' days ago'\r\n      if (daysAgo === 1) {\r\n          postTimeTag = daysAgo + ' day ago'\r\n      }\r\n\r\n    } else if (timeSincePost < MINUTES_IN_HOUR * HOURS_IN_DAY * DAYS_IN_MONTH * MONTHS_IN_YEAR) {\r\n      const monthsAgo = parseInt(\r\n        timeSincePost / MINUTES_IN_HOUR / HOURS_IN_DAY / DAYS_IN_MONTH\r\n      )\r\n      postTimeTag = monthsAgo + ' months ago'\r\n      if (monthsAgo === 1) {\r\n        postTimeTag = monthsAgo + ' month ago'\r\n      }\r\n    } else {\r\n      // years ago\r\n      const yearsAgo = parseInt(\r\n        timeSincePost / MINUTES_IN_HOUR / HOURS_IN_DAY / DAYS_IN_MONTH / MONTHS_IN_YEAR\r\n      )\r\n      postTimeTag = yearsAgo + ' years ago'\r\n      if (yearsAgo === 1) {\r\n        postTimeTag = yearsAgo + ' year ago'\r\n      }\r\n    }\r\n\r\n    let parsedVideoLink\r\n    if (this.state.post.videoLink) {\r\n      if (!this.state.post.nsfw) {\r\n        let videoId = this.state.post.videoLink.split('watch?v=')[1]\r\n        if (videoId.includes('&')) {\r\n          videoId = videoId.split('&')[0]\r\n        }\r\n        parsedVideoLink = 'https://www.youtube-nocookie.com/embed/' + videoId\r\n      } else {\r\n        let videoId = this.state.post.videoLink.split('viewkey=')[1]\r\n        parsedVideoLink = 'https://www.hub.com/embed/' + videoId\r\n      }\r\n    }\r\n\r\n\r\n    return (\r\n      <div\r\n        id={this.state.post.postId}\r\n      >\r\n        <div\r\n          id={\"timelineProfileLink\" + this.state.post._id}\r\n          style={{\r\n            display: 'none',\r\n            paddingLeft: '1%'\r\n          }}\r\n        >\r\n          <a\r\n            href={\"/profile/\" + this.state.post.profile}\r\n            style={\r\n              localStorage.getItem('darkMode') === 'true' ?\r\n              {color: '#b5b5b5', textDecoration: 'none'} :\r\n              {color: 'black', textDecoration: 'none'}}>\r\n          <img\r\n            id=\"profilePicturePreview\"\r\n            src={\r\n              process.env.PUBLIC_URL +\r\n              this.state.profileImage\r\n            }\r\n            alt=\"profile\"\r\n          />\r\n          &nbsp;\r\n          <strong>{this.state.post.profile}</strong>\r\n          </a>\r\n        </div>\r\n        <div id={\"specifiedPostPic\" + this.state.post._id}\r\n          className=\"specifiedPostPic\"\r\n          style={this.state.post.title || this.state.post.videoLink ? {display: 'none'}: {display: 'block'}}>\r\n          <img\r\n            id=\"postPic\"\r\n            src={process.env.PUBLIC_URL + this.state.imageSource}\r\n            alt=\"post\"\r\n            onClick={this.displayNsfwImage}\r\n          />\r\n        </div>\r\n        <div id={\"specifiedPostContent\" + this.state.post._id}\r\n          className=\"specifiedPostContent card\"\r\n          style={this.state.post.title ? {display: 'block', marginTop: '5px'}: {display: 'none'}}>\r\n          <h4 className=\"card-title\" style={{marginLeft: '2%'}}>{this.state.post.title}</h4>\r\n          <p className=\"card-text\" style={{marginLeft: '2%'}}>{this.state.post.content}</p>\r\n        </div>\r\n        <div id={\"specifiedPostVideo\" + this.state.post._id}\r\n          className=\"specifiedPostVideo\"\r\n          style={this.state.post.videoLink ? {display: 'block'}: {display: 'none'}}>\r\n          <iframe\r\n            id = {'video' + this.state.post._id}\r\n            className=\"videoPost\"\r\n            title=\"video\"\r\n            height=\"500vh\"\r\n            src={parsedVideoLink}\r\n            frameBorder=\"0\"\r\n            allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n            allowFullScreen\r\n            style={\r\n              (this.state.post.nsfw &&\r\n              localStorage.getItem('autoShowNsfw') === 'false') ||\r\n              !localStorage.getItem('plumUser56010') ?\r\n              {display: 'none'} : {display: 'block'}}\r\n          >\r\n          </iframe>\r\n          <img\r\n            id={\"videoNsfwPic1\" + this.state.post._id}\r\n            className=\"videoNsfwPosterPic\"\r\n            src=\"/nsfw_post_with_nsfw_off.png\"\r\n            style={\r\n              this.state.post.nsfw &&\r\n              localStorage.getItem('showNsfw') === 'false' ?\r\n              {display: 'block'} : {display: 'none'}\r\n            }\r\n            alt=\"nsfw\"\r\n          />\r\n          <img\r\n            id={\"videoNsfwPic2\" + this.state.post._id}\r\n            className=\"videoNsfwPosterPic\"\r\n            src='/nsfw_post_with_nsfw_on_auto_off.png'\r\n            style={\r\n              this.state.post.nsfw &&\r\n              localStorage.getItem('showNsfw') === 'true' &&\r\n              localStorage.getItem('autoShowNsfw') === 'false' ?\r\n              {display: 'block'} : {display: 'none'}\r\n            }\r\n            alt=\"nsfw\"\r\n            onClick={this.unveilVideo}\r\n          />\r\n          <img\r\n            id={\"videoNsfwPic3\" + this.state.post._id}\r\n            src='/nsfw_post_not_signed_in.png'\r\n            className=\"videoNsfwPosterPic\"\r\n            style={\r\n              this.state.post.nsfw &&\r\n              !localStorage.getItem('plumUser56010') ?\r\n              {display: 'block'} : {display: 'none'}\r\n            }\r\n            alt=\"nsfw\"\r\n          />\r\n        </div>\r\n        <div\r\n          id=\"specifiedPostInteractiveSection\"\r\n        >\r\n          <PostActions\r\n            post={this.state.post}\r\n            likedPostsByUser={this.props.likedPostsByUser}\r\n          />\r\n          <p id=\"postDetails\">\r\n            {this.state.post.description}\r\n            <br />\r\n            {postTimeTag}\r\n          </p>\r\n          <CommentsSection\r\n            post={this.state.post}\r\n            isFromProfile={this.props.isFromProfile}\r\n            isTimeline={this.props.isTimeline}\r\n            likedCommentsByUser={this.props.likedCommentsByUser}\r\n            postId={this.state.post._id}\r\n          />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SpecificPost;\r\n","// this component represents the 3-column post grid\r\n// (visible on your profile and when you view another profile)\r\nimport React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport SpecificPost from './SpecificPost'\r\n\r\nclass PostGrid extends Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      posts: this.props.posts\r\n    }\r\n  }\r\n\r\n  // if posts array changes (new profile clicked), set new state\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (this.props.posts !== prevProps.posts) {\r\n      this.setState({\r\n        posts: this.props.posts\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (this.props.isTimeline === true && this.state.posts.length < 1) {\r\n      return (\r\n        <div style={{textAlign: 'center', margin: '10px'}}>\r\n        <h5>\r\n          Welcome to GifShr! <br /><br />\r\n          Your timeline is currently empty.\r\n          Follow profiles to see their most recent posts here.\r\n        </h5>\r\n        <br />\r\n        <h6 style={{fontWeight: 'normal'}}>\r\n          The menu which can take you to various pages is on the right end at the top of the page. <br /><br />\r\n          To visit your profile, click on your profile picture in the top right, just to the left of the menu. <br /><br />\r\n          You can search for profiles using the search bar at the top, in the middle of the page. <br /><br />\r\n          The app logo on the top left will take you back here to your timeline.\r\n        </h6>\r\n        For more information, visit the <Link to=\"/about\">about</Link> or <Link to=\"/faq\">FAQ</Link> pages.\r\n        </div>\r\n      )\r\n    }\r\n\r\n    if (this.props.gridLayout) {\r\n      return (\r\n        <div id=\"postGrid\">\r\n          <div className=\"individualPic\">\r\n            {this.state.posts.map((post, i) => (\r\n              <Link\r\n                key={i}\r\n                to={\"/profile/\" + post.profile + '/'\r\n                    + post.postId }\r\n              >\r\n                <img\r\n                  key={i}\r\n                  className=\"postGridPic\"\r\n                  id={post.postId}\r\n                  src={post.imageSource}\r\n                  alt=\"post\"\r\n                  style={(post.title || (post.nsfw && !localStorage.getItem('plumUser56010')) || (post.nsfw && (localStorage.getItem('showNsfw') === 'false' || localStorage.getItem('autoShowNsfw') === 'false') )) ? {display: 'none'} : {display: 'inline'}}\r\n                />\r\n              </Link>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )\r\n    } else {\r\n      // scroll through posts (all post info displayed)\r\n      return (\r\n        <div id=\"postScroll\">\r\n            {this.state.posts.map((post, i) => (\r\n              <div key={i} >\r\n                <SpecificPost\r\n                  post={post}\r\n                  key={i}\r\n                  isFromProfile={true}\r\n                  isTimeline={this.props.isTimeline}\r\n                  likedPostsByUser={this.props.likedPostsByUser}\r\n                  likedCommentsByUser={this.props.likedCommentsByUser}\r\n                />\r\n              </div>\r\n            ))}\r\n        </div>\r\n      )\r\n    }\r\n\r\n  }\r\n}\r\nexport default PostGrid;\r\n","// this is the profile page component\r\nimport React, { Component } from 'react';\r\nimport '../App.css';\r\nimport '../styles/loginPage.css';\r\nimport '../styles/accountCreation.css';\r\nimport '../styles/switch.css';\r\nimport ProfileHeader from './ProfileHeader';\r\nimport PostGrid from './PostGrid';\r\nimport { Row, Col } from 'react-bootstrap';\r\n\r\nclass ProfilePage extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    if (localStorage.getItem('gridLayout') === 'true') {\r\n      this.state = {\r\n        gridLayout: true,\r\n        posts: [],\r\n      }\r\n    } else {\r\n      this.state = {\r\n        gridLayout: false,\r\n        posts: [],\r\n      }\r\n    }\r\n  }\r\n\r\n  // this will enable Link usage as opposed to <a href>\r\n  // (not reloading whole page) when going to another profile\r\n  // while already on the /profile/:user path.\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    // check path name (/profile/:user) and check if changed\r\n    if (this.props.location.pathname !== prevProps.location.pathname ||\r\n        this.props.likedPostsByUser !== prevProps.likedPostsByUser) {\r\n      this.renderPosts()\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.renderPosts()\r\n  }\r\n\r\n  // render posts\r\n  renderPosts = async () => {\r\n    // parse URL and grab username of profile being viewed\r\n    const current_url = window.location.href\r\n    await this.setState({\r\n      posts: []\r\n    })\r\n    // rendered on a profile page\r\n    if (current_url.includes('profile/')) {\r\n      let profileViewed = current_url.split('profile/')[1]\r\n      // check if post appended in url\r\n      if (profileViewed.includes('/')) {\r\n        profileViewed = profileViewed.split('/')[0]\r\n      }\r\n\r\n      const response = await fetch('/posts/renderPosts/' + profileViewed, {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error)\r\n      })\r\n\r\n      const body = await response.text()\r\n\r\n      const parsedBody = await JSON.parse(body)\r\n      // console.log(parsedBody)\r\n      // get all image sources for this profile's posts\r\n      let posts = []\r\n      for (let i = 0; i < parsedBody.length; i++) {\r\n        await posts.push(parsedBody[i])\r\n      }\r\n      await this.setState({\r\n        posts: posts\r\n      })\r\n    } else {\r\n      this.setState({\r\n        posts: this.props.likedPostsByUser\r\n      })\r\n    }\r\n  }\r\n\r\n  handleSwitchToggle(e) {\r\n    // if switch is on or not\r\n    const checked = e.target.checked\r\n\r\n    if (checked) {\r\n      this.setState({\r\n        gridLayout: true\r\n      })\r\n      localStorage.setItem('gridLayout', \"true\")\r\n    } else {\r\n      this.setState({\r\n        gridLayout: false\r\n      })\r\n      localStorage.setItem('gridLayout', \"false\")\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const current_url = window.location.href\r\n    // rendered on a profile page\r\n    if (current_url.includes('profile/')) {\r\n      return (\r\n        <div>\r\n        <ProfileHeader\r\n          user={localStorage.getItem('plumUser56010')}\r\n          loggedInUserFollowing={this.props.loggedInUserFollowing}\r\n          url={current_url}\r\n        />\r\n        <hr />\r\n        <Row>\r\n        <Col style={{textAlign: \"right\", marginTop: '4px'}}>\r\n          Post Grid\r\n        </Col>\r\n        <Col>\r\n          <label className=\"switch\">\r\n            <input\r\n              name=\"layoutSwitch\"\r\n              type=\"checkbox\"\r\n              checked={this.state.gridLayout}\r\n              onChange={(event) => this.handleSwitchToggle(event)}\r\n            />\r\n            <span className=\"slider round\"></span>\r\n          </label>\r\n        </Col>\r\n        </Row>\r\n\r\n        <PostGrid\r\n          gridLayout={this.state.gridLayout}\r\n          posts={this.state.posts}\r\n          likedPostsByUser={this.props.likedPostsByUser}\r\n          url={current_url}\r\n        />\r\n        </div>\r\n      )\r\n    } else {\r\n      return (\r\n        <div>\r\n        <Row>\r\n        <Col style={{textAlign: \"right\", marginTop: '4px'}}>\r\n          Post Grid\r\n        </Col>\r\n        <Col>\r\n          <label className=\"switch\">\r\n            <input\r\n              name=\"layoutSwitch\"\r\n              type=\"checkbox\"\r\n              checked={this.state.gridLayout}\r\n              onChange={(event) => this.handleSwitchToggle(event)}\r\n            />\r\n            <span className=\"slider round\"></span>\r\n          </label>\r\n        </Col>\r\n        </Row>\r\n\r\n        <PostGrid\r\n          gridLayout={this.state.gridLayout}\r\n          posts={this.state.posts}\r\n          likedPostsByUser={this.props.likedPostsByUser}\r\n          url={current_url}\r\n        />\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n}\r\nexport default ProfilePage;\r\n","import React, { Component } from 'react';\r\nimport '../App.css';\r\nimport '../styles/loginPage.css';\r\nimport '../styles/accountCreation.css';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\nconst MAX_FILE_SIZE = 10000000 // 10 MB\r\n\r\nclass EditProfile extends Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      file: null,\r\n      displayPreview: false\r\n    }\r\n    this.handleChange = this.handleChange.bind(this)\r\n    this.enableButtonCheck = this.enableButtonCheck.bind(this)\r\n  }\r\n\r\n  enableButton = () => {\r\n    document.getElementById(\"formSubmitButton\").disabled = false\r\n  }\r\n\r\n  // check whether or not to enable submit button\r\n  enableButtonCheck = () => {\r\n    // if a legit file is entered\r\n    // AND one NSFW option is selected\r\n    // enable the post submission button\r\n    if (this.state.file !== null) {\r\n      const postIsNSFWCheckbox = document.getElementById('postIsNSFW')\r\n      const postIsNotNSFWCheckbox = document.getElementById('postIsNotNSFW')\r\n      if (postIsNSFWCheckbox.checked || postIsNotNSFWCheckbox.checked) {\r\n        document.getElementById(\"formSubmitButton\").disabled = false\r\n      } else {\r\n        document.getElementById(\"formSubmitButton\").disabled = true\r\n      }\r\n    } else {\r\n      document.getElementById(\"formSubmitButton\").disabled = true\r\n    }\r\n  }\r\n\r\n  handleChange(event) {\r\n    try {\r\n\r\n      const fileUploadInput = document.getElementById('fileUploadInput')\r\n      //console.log(fileUploadInput.files.item(0).type)\r\n\r\n      // size validation\r\n      const fileUploadSize = fileUploadInput.files.item(0).size\r\n      if (fileUploadSize > MAX_FILE_SIZE) {\r\n        // display size error\r\n        this.setState({\r\n          file: null,\r\n          displayPreview: false\r\n        })\r\n        document.getElementById(\"formSubmitButton\").disabled = true;\r\n        document.getElementById(\"fileSizeError\").style.display = 'inline'\r\n        return\r\n      } else {\r\n        document.getElementById(\"fileSizeError\").style.display = 'none'\r\n      }\r\n\r\n      const separated = fileUploadInput.value.split('.')\r\n      // get the last part separated by . (file type)\r\n      const fileType = separated[separated.length - 1]\r\n\r\n      if (fileType === 'png' ||\r\n        fileType === 'jpg' ||\r\n        fileType === 'jpeg' ||\r\n        fileType === 'gif') {\r\n\r\n        // valid\r\n        this.enableButtonCheck()\r\n        document.getElementById(\"fileTypeError\").style.display = 'none'\r\n        this.setState({\r\n          displayPreview: true,\r\n          file: URL.createObjectURL(event.target.files[0])\r\n        })\r\n      } else {\r\n        this.setState({\r\n          file: null,\r\n          displayPreview: false\r\n        })\r\n        document.getElementById(\"formSubmitButton\").disabled = true;\r\n        document.getElementById(\"fileTypeError\").style.display = 'inline'\r\n      }\r\n\r\n    } catch(err) {\r\n      //console.log(err)\r\n      this.setState({\r\n        file: null\r\n      })\r\n      document.getElementById(\"formSubmitButton\").disabled = true;\r\n    }\r\n  }\r\n\r\n  // nsfw checkbox checked or unchecked\r\n  nsfwCheckboxAction = (e) => {\r\n    const postIsNSFWCheckbox = document.getElementById('postIsNSFW')\r\n    const postIsNotNSFWCheckbox = document.getElementById('postIsNotNSFW')\r\n    if (postIsNSFWCheckbox.checked && postIsNotNSFWCheckbox.checked) {\r\n      if (e.target.id === 'postIsNSFW') {\r\n        postIsNotNSFWCheckbox.checked = false\r\n      } else {\r\n        postIsNSFWCheckbox.checked = false\r\n      }\r\n    }\r\n    this.enableButtonCheck()\r\n  }\r\n\r\n  render() {\r\n    const description = this.props.description\r\n\r\n    // render textbox for description\r\n    // Edit profile image\r\n    return (\r\n\r\n      <div className=\"App\" id=\"profileEditor\">\r\n        <Container>\r\n          <Row>\r\n            <Col>\r\n              <h4>Edit profile</h4>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              Upload new profile picture\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <form\r\n                action={'/profile/'\r\n                         + localStorage.getItem('plumUser56010')\r\n                         + '/uploadProfileImage'}\r\n                method='post'\r\n                encType=\"multipart/form-data\">\r\n                <br />\r\n                  <input\r\n                    name=\"profilePic\"\r\n                    id=\"fileUploadInput\"\r\n                    type=\"file\"\r\n                    onChange={this.handleChange}\r\n                    style={{marginLeft: '10px'}}\r\n                  />\r\n                  <br /><br />\r\n                  <input\r\n                    id=\"tokenInput\"\r\n                    className=\"form-control\"\r\n                    name=\"tokenInput\"\r\n                    type=\"text\"\r\n                    value={localStorage.getItem('token')}\r\n                    aria-label=\"TextPostTitle\"\r\n                    width=\"2px\"\r\n                    readOnly\r\n                    style={{display: 'none'}}\r\n                  />\r\n                  <div id=\"fileSizeError\" style={{color: 'red', display: 'none'}}>\r\n                    File size is too large. Files cannot exceed 10MB in size.\r\n                    <br /><br />\r\n                  </div>\r\n                  <div id=\"fileTypeError\" style={{color: 'red', display: 'none'}}>\r\n                    File type not accepted. Only .PNG, .JPG/JPEG, .GIF file extensions allowed.\r\n                    <br /><br />\r\n                  </div>\r\n                  <img\r\n                    src={this.state.file}\r\n                    id=\"profilePicture\"\r\n                    alt=\"profile\"\r\n                    style={this.state.displayPreview ? {display: 'inline'} : {display: 'none'}}\r\n                  />\r\n                  <br /><br />\r\n                  Profile description\r\n                  <br />\r\n                  <textarea\r\n                    name=\"profileDescription\"\r\n                    id=\"profileDescription\"\r\n                    rows=\"4\"\r\n                    cols=\"30\"\r\n                    defaultValue={description}\r\n                    onChange={this.enableButton} >\r\n                  </textarea>\r\n                  <br />\r\n\r\n                  <label htmlFor=\"postIsNSFW\">\r\n                    Required: Does this profile picture contain adult content? (NSFW)\r\n                  </label><br />\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    id=\"postIsNSFW\"\r\n                    name=\"nsfwPostCheckbox\"\r\n                    value=\"postIsNSFW\"\r\n                    onChange={this.nsfwCheckboxAction}/> Yes &nbsp;\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    id=\"postIsNotNSFW\"\r\n                    name=\"nsfwPostCheckbox\"\r\n                    value=\"postIsNotNSFW\"\r\n                    onChange={this.nsfwCheckboxAction} /> No <br />\r\n                  You can read the guidelines for what classifies as adult/NSFW content <a href=\"/guidelines#nsfw\">here.</a> <br />\r\n                  <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary\"\r\n                    id=\"formSubmitButton\"\r\n                    disabled>\r\n                    Save\r\n                  </button>\r\n              </form>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default EditProfile;\r\n","import React, { Component } from 'react';\r\nimport '../styles/CreatePost.css';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nconst MAX_FILE_SIZE = 10000000 // 10 MB\r\n\r\nclass CreatePost extends Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      file: null,\r\n      readyToPost: false,\r\n      imagePost: true,\r\n      textPost: false,\r\n      videoPost: false,\r\n      displayPreview: false,\r\n      postIsNSFW: false,\r\n      postIsNotNSFW: false\r\n    }\r\n    this.handleChange = this.handleChange.bind(this)\r\n  }\r\n\r\n  enableButtonCheck = () => {\r\n    // if a legit file is entered\r\n    // AND one NSFW option is selected\r\n    // enable the post submission button\r\n    if (this.state.file !== null) {\r\n      const postIsNSFWCheckbox = document.getElementById('postIsNSFW')\r\n      const postIsNotNSFWCheckbox = document.getElementById('postIsNotNSFW')\r\n      if (postIsNSFWCheckbox.checked || postIsNotNSFWCheckbox.checked) {\r\n        document.getElementById(\"formSubmitButton\").disabled = false\r\n      } else {\r\n        document.getElementById(\"formSubmitButton\").disabled = true\r\n      }\r\n    } else {\r\n      document.getElementById(\"formSubmitButton\").disabled = true\r\n    }\r\n  }\r\n\r\n  async handleChange(event) {\r\n    try {\r\n      await this.setState({\r\n        file: URL.createObjectURL(event.target.files[0])\r\n      })\r\n      const fileUploadInput = document.getElementById('fileUploadInput')\r\n\r\n      // file size check\r\n      const fileUploadSize = fileUploadInput.files.item(0).size\r\n      if (fileUploadSize > MAX_FILE_SIZE) {\r\n        await this.setState({\r\n          file: null,\r\n          displayPreview: false\r\n        })\r\n        document.getElementById(\"formSubmitButton\").disabled = true;\r\n        document.getElementById(\"fileSizeError\").style.display = 'inline'\r\n        return\r\n      } else {\r\n        document.getElementById(\"fileSizeError\").style.display = 'none'\r\n      }\r\n\r\n      const separated = fileUploadInput.value.split('.')\r\n      // get the last part separated by . (file type)\r\n      const fileType = separated[separated.length - 1]\r\n      if (fileType === 'png' ||\r\n        fileType === 'jpg' ||\r\n        fileType === 'jpeg' ||\r\n        fileType === 'gif') {\r\n\r\n        // valid\r\n        this.enableButtonCheck()\r\n        document.getElementById(\"fileTypeError\").style.display = 'none'\r\n        this.setState({\r\n          displayPreview: true\r\n        })\r\n      } else {\r\n        this.setState({\r\n          file: null,\r\n          displayPreview: false\r\n        })\r\n        document.getElementById(\"formSubmitButton\").disabled = true;\r\n        document.getElementById(\"fileTypeError\").style.display = 'inline'\r\n      }\r\n\r\n    } catch(err) {\r\n      console.log(err)\r\n      this.setState({\r\n        file: null\r\n      })\r\n      document.getElementById(\"formSubmitButton\").disabled = true;\r\n    }\r\n  }\r\n\r\n  // toggle different post upload type\r\n  togglePostType = (e) => {\r\n    const button = e.target\r\n    const newPostImageButton = document.getElementById('newPostImageButton')\r\n    const newPostTextButton = document.getElementById('newPostTextButton')\r\n    const newPostVideoButton = document.getElementById('newPostVideoButton')\r\n    switch (button.id) {\r\n      case 'newPostImageButton':\r\n        newPostImageButton.className = 'btn btn-primary newPostButton'\r\n        newPostTextButton.className = 'btn btn-secondary newPostButton'\r\n        newPostVideoButton.className = 'btn btn-secondary newPostButton'\r\n        this.setState({\r\n          imagePost: true,\r\n          textPost: false,\r\n          videoPost: false,\r\n        })\r\n        break;\r\n      case 'newPostTextButton':\r\n        newPostImageButton.className = 'btn btn-secondary newPostButton'\r\n        newPostTextButton.className = 'btn btn-primary newPostButton'\r\n        newPostVideoButton.className = 'btn btn-secondary newPostButton'\r\n        this.setState({\r\n          imagePost: false,\r\n          textPost: true,\r\n          videoPost: false,\r\n        })\r\n        break;\r\n      case 'newPostVideoButton':\r\n        newPostImageButton.className = 'btn btn-secondary newPostButton'\r\n        newPostTextButton.className = 'btn btn-secondary newPostButton'\r\n        newPostVideoButton.className = 'btn btn-primary newPostButton'\r\n        this.setState({\r\n          imagePost: false,\r\n          textPost: false,\r\n          videoPost: true,\r\n        })\r\n        break;\r\n      case 'newPostHubButton':\r\n        newPostImageButton.className = 'btn btn-secondary newPostButton'\r\n        newPostTextButton.className = 'btn btn-secondary newPostButton'\r\n        newPostVideoButton.className = 'btn btn-secondary newPostButton'\r\n        this.setState({\r\n          imagePost: false,\r\n          textPost: false,\r\n          videoPost: false,\r\n        })\r\n        break;\r\n      default:\r\n        break\r\n    }\r\n    this.openPostTypeMenu()\r\n  }\r\n\r\n  // submit new text post\r\n  submitTextPost = async () => {\r\n    const textPostTitle = document.getElementById('textPostTitle')\r\n    const textPostContent = document.getElementById('textPostContent')\r\n    const title = textPostTitle.value\r\n    const content = textPostContent.value\r\n    if (title.length < 1) {\r\n      // show title error message and don't move on to api\r\n      const textPostTitleError = document.getElementById('textPostTitleError')\r\n      textPostTitleError.style.display = 'inline'\r\n      return\r\n    }\r\n\r\n    // submit the new post to api\r\n    const response = await fetch('/posts/' + localStorage.getItem('plumUser56010')\r\n     + '/createTextPost', {\r\n       method: 'POST',\r\n       headers: {\r\n         'Content-Type': 'application/json'\r\n       },\r\n       body: JSON.stringify({\r\n         title: title,\r\n         content: content,\r\n         token: localStorage.getItem('token')\r\n       })\r\n     })\r\n    const body = await response.text()\r\n    if (body === 'error') {\r\n      alert('Unable to publish post. Please try again later.')\r\n    } else {\r\n      // redirect\r\n      window.location.replace(\"/profile/\" + localStorage.getItem('plumUser56010'));\r\n    }\r\n  }\r\n\r\n  // submit new video post\r\n  submitVideoPost = async () => {\r\n    const videoPostDescription = document.getElementById('videoPostDescription')\r\n    const videoPostURL = document.getElementById('videoPostURL')\r\n    const videoLink = videoPostURL.value\r\n    // URL verification here\r\n    if (videoLink.length < 1) {\r\n      // show video post error message and don't move on to api\r\n      const videoPostError = document.getElementById('videoPostError')\r\n      videoPostError.style.display = 'inline'\r\n      return\r\n    }\r\n\r\n    // ensure valid url\r\n    if (!videoLink.startsWith('https://www.youtube.com/watch?v=')) {\r\n      // show video post error message and don't move on to api\r\n      const videoPostError = document.getElementById('videoPostError')\r\n      videoPostError.style.display = 'inline'\r\n      return\r\n    }\r\n\r\n    // submit the new post to api\r\n    const response = await fetch('/posts/' + localStorage.getItem('plumUser56010')\r\n     + '/createVideoPost', {\r\n       method: 'POST',\r\n       headers: {\r\n         'Content-Type': 'application/json'\r\n       },\r\n       body: JSON.stringify({\r\n         videoLink: videoLink,\r\n         description: videoPostDescription.value,\r\n         token: localStorage.getItem('token')\r\n       })\r\n     })\r\n    const body = await response.text()\r\n    console.log(body)\r\n    if (body === 'error') {\r\n      alert('Unable to publish post. Please try again later.')\r\n    } else {\r\n      // redirect\r\n      window.location.replace(\"/profile/\" + localStorage.getItem('plumUser56010'));\r\n    }\r\n  }\r\n\r\n  // nsfw checkbox checked or unchecked\r\n  nsfwCheckboxAction = (e) => {\r\n    const postIsNSFWCheckbox = document.getElementById('postIsNSFW')\r\n    const postIsNotNSFWCheckbox = document.getElementById('postIsNotNSFW')\r\n    if (postIsNSFWCheckbox.checked && postIsNotNSFWCheckbox.checked) {\r\n      if (e.target.id === 'postIsNSFW') {\r\n        postIsNotNSFWCheckbox.checked = false\r\n      } else {\r\n        postIsNSFWCheckbox.checked = false\r\n      }\r\n    }\r\n    this.enableButtonCheck()\r\n  }\r\n\r\n  // open/close post type menu\r\n  openPostTypeMenu = () => {\r\n    const choosePostTypeMenu = document.getElementById('choosePostType')\r\n    if (choosePostTypeMenu.style.display === 'none') {\r\n      choosePostTypeMenu.style.display = 'inline'\r\n    } else {\r\n      choosePostTypeMenu.style.display = 'none'\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (!localStorage.getItem('plumUser56010')) {\r\n      return (\r\n        <h2 style={{textAlign: 'center'}}>Sign in to create a post.</h2>\r\n      )\r\n    }\r\n    return (\r\n      <div id=\"postUpload\">\r\n        <button\r\n          className=\"btn btn-info\"\r\n          id=\"changePostType\"\r\n          onClick={this.openPostTypeMenu}\r\n          style={{width: '60%', margin: 'auto'}}\r\n        >\r\n          Change post type &nbsp;\r\n          < FontAwesomeIcon\r\n            icon=\"caret-down\"\r\n          />\r\n        </button>\r\n        <div id=\"choosePostType\" style={{display: 'none'}}>\r\n          <button\r\n            className=\"btn btn-primary newPostButton\"\r\n            id=\"newPostImageButton\"\r\n            onClick={this.togglePostType}\r\n            >\r\n            < FontAwesomeIcon icon={['far', 'image']} /> Image/Gif\r\n          </button>\r\n          <button\r\n            className=\"btn btn-secondary newPostButton\"\r\n            id=\"newPostTextButton\"\r\n            onClick={this.togglePostType}\r\n            >\r\n            < FontAwesomeIcon icon={['fas', 'align-left']} /> Text\r\n          </button>\r\n          <button\r\n            className=\"btn btn-secondary newPostButton\"\r\n            id=\"newPostVideoButton\"\r\n            onClick={this.togglePostType}\r\n            >\r\n            < FontAwesomeIcon icon={['fab', 'youtube']} /> YouTube Embed\r\n          </button>\r\n          {\r\n          // <Link\r\n          //   className=\"btn btn-secondary newPostButton\"\r\n          //   id=\"newPostArticleButton\"\r\n          //   to={\"/CreateArticlePost\"}\r\n          // >\r\n          //   < FontAwesomeIcon icon={['fas', 'file-alt']} /> Article\r\n          // </Link>\r\n          }\r\n        </div>\r\n        <br />\r\n        <br />\r\n        <div\r\n          id=\"imageUploadForm\"\r\n          style={\r\n            this.state.imagePost ?\r\n            {display: 'inline'} : {display: 'none'}\r\n          }>\r\n          <form\r\n            action={'/posts/'\r\n                     + localStorage.getItem('plumUser56010')\r\n                     + '/createImagePost'}\r\n            method='post'\r\n            encType=\"multipart/form-data\">\r\n            <h4>< FontAwesomeIcon icon={['far', 'image']} /> Image/Gif </h4>\r\n            <br />\r\n            <label htmlFor=\"fileUploadInput\" className=\"btn btn-secondary\" style={{width: '200px', margin: 'auto'}}>\r\n              Click to upload image\r\n            </label>\r\n            <input\r\n              name=\"postPic\"\r\n              id=\"fileUploadInput\"\r\n              type=\"file\"\r\n              onChange={this.handleChange}\r\n              style={{marginLeft: '10px', display: 'none'}} />\r\n            <br /><br />\r\n            <input\r\n              id=\"tokenInput\"\r\n              className=\"form-control\"\r\n              name=\"tokenInput\"\r\n              type=\"text\"\r\n              value={localStorage.getItem('token')}\r\n              aria-label=\"TextPostTitle\"\r\n              readOnly\r\n              style={{display: 'none'}}\r\n            />\r\n            <div id=\"fileSizeError\" style={{color: 'red', display: 'none'}}>\r\n              File size is too large. Files cannot exceed 10MB in size.\r\n              <br /><br />\r\n            </div>\r\n            <div id=\"fileTypeError\" style={{color: 'red', display: 'none'}}>\r\n              File type not accepted. Only .PNG, .JPG/JPEG, .GIF file extensions allowed.\r\n              <br /><br />\r\n            </div>\r\n            <img\r\n              src={this.state.file}\r\n              alt=\"post\"\r\n              style={ this.state.displayPreview ? {display: 'inline', maxWidth: '90%'} : {display: 'none'}}\r\n            />\r\n            <br /><br />\r\n            <textarea\r\n              className=\"form-control\"\r\n              name=\"postDescription\"\r\n              rows=\"3\"\r\n              style={{width: '80%', margin: 'auto'}}\r\n              placeholder=\"Post description...\">\r\n            </textarea>\r\n            <br />\r\n\r\n            <label htmlFor=\"postIsNSFW\">\r\n              Required: Does this post contain adult content? (NSFW)\r\n            </label><br />\r\n            <input\r\n              type=\"checkbox\"\r\n              id=\"postIsNSFW\"\r\n              name=\"nsfwPostCheckbox\"\r\n              value=\"postIsNSFW\"\r\n              onChange={this.nsfwCheckboxAction}\r\n              checked={localStorage.getItem('autoCheckNsfwOnPosts') === 'true' ? true : false}/> Yes &nbsp;\r\n            <input\r\n              type=\"checkbox\"\r\n              id=\"postIsNotNSFW\"\r\n              name=\"nsfwPostCheckbox\"\r\n              value=\"postIsNotNSFW\"\r\n              onChange={this.nsfwCheckboxAction} /> No <br />\r\n            You can read the guidelines for what classifies as adult/NSFW content <a href=\"/guidelines#nsfw\">here.</a> <br />\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn-primary\"\r\n              id=\"formSubmitButton\"\r\n              disabled>\r\n              Post\r\n            </button>\r\n          </form>\r\n        </div>\r\n        <div\r\n          id=\"textUploadForm\"\r\n          style={\r\n            this.state.textPost ?\r\n            {display: 'inline'} : {display: 'none'}\r\n          }>\r\n          <h4>< FontAwesomeIcon icon={['fas', 'align-left']} /> Text </h4>\r\n          <br />\r\n          Title (max 120 chars)\r\n          <input\r\n            id=\"textPostTitle\"\r\n            className=\"form-control\"\r\n            type=\"text\"\r\n            placeholder=\"Post Title\"\r\n            aria-label=\"TextPostTitle\"\r\n            maxLength=\"120\"\r\n            style={{width: '80%', margin: 'auto', marginTop: '5px'}}\r\n          />\r\n          <div id=\"textPostTitleError\" style={{display: 'none'}}>\r\n            Your post must have a title.\r\n          </div>\r\n          <br />\r\n          Content (optional, max 400 chars)\r\n          <br />\r\n          <textarea\r\n            id=\"textPostContent\"\r\n            className=\"form-control\"\r\n            name=\"textPostContent\"\r\n            style={{\r\n              width: '80%',\r\n              height: '200px',\r\n              margin: 'auto'\r\n            }}\r\n            maxLength=\"400\"\r\n            placeholder=\"Post text...\">\r\n          </textarea>\r\n          <br />\r\n          <button\r\n            className=\"btn btn-primary\"\r\n            id=\"submitTextPost\"\r\n            style={{width: '220px'}}\r\n            onClick={this.submitTextPost}>\r\n            Post\r\n          </button>\r\n        </div>\r\n        <div\r\n          id=\"videoUploadForm\"\r\n          style={\r\n            this.state.videoPost ?\r\n            {display: 'inline'} : {display: 'none'}\r\n          }>\r\n          <h4>< FontAwesomeIcon icon={['fab', 'youtube']} /> YouTube Embed </h4>\r\n          <br />\r\n          Paste or enter URL of a YouTube video you want to share:\r\n          <br /><br />\r\n          <input\r\n            id=\"videoPostURL\"\r\n            className=\"form-control\"\r\n            type=\"text\"\r\n            placeholder=\"https://www.youtube.com/watch?v=aC7eegwbDwE\"\r\n            aria-label=\"VideoPostURL\"\r\n            style={{width: '80%', margin: 'auto'}}\r\n          />\r\n          <div id=\"videoPostError\" style={{display: 'none', color: 'red'}}>\r\n            You must submit a valid link to a YouTube video.\r\n          </div>\r\n          <br /><br />\r\n          <textarea\r\n            name=\"videoPostDescription\"\r\n            id=\"videoPostDescription\"\r\n            className=\"form-control\"\r\n            style={{\r\n              width: '80%',\r\n              margin: 'auto',\r\n              height: '100px'\r\n            }}\r\n            placeholder=\"Video description (optional)\">\r\n          </textarea>\r\n          <br />\r\n          <button\r\n            className=\"btn btn-primary\"\r\n            id=\"submitVideoPost\"\r\n            style={{width: '220px'}}\r\n            onClick={this.submitVideoPost}>\r\n            Post\r\n          </button>\r\n        </div>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default CreatePost;\r\n","import React, { Component } from 'react';\r\nimport '../styles/Header.css';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass LoggedInHeader extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    if (localStorage.getItem('profileImage')) {\r\n      this.state = {\r\n        profileImage: localStorage.getItem('profileImage')\r\n      }\r\n    } else {\r\n      this.state = {\r\n        profileImage: process.env.PUBLIC_URL\r\n        + '/default_profile_image.png'\r\n      }\r\n    }\r\n    this.banCheck()\r\n  }\r\n\r\n  logOut = () => {\r\n    localStorage.setItem('plumUser56010', \"\")\r\n    localStorage.setItem('darkMode', \"\")\r\n    localStorage.setItem('showNsfw', \"\")\r\n    localStorage.setItem('autoShowNsfw', \"\")\r\n    localStorage.setItem('autoCheckNsfwOnPosts', \"\")\r\n    localStorage.setItem('token', \"\")\r\n    window.location.reload(false);\r\n  }\r\n\r\n  // show or hide the navbar menu links\r\n  toggleMenu = () => {\r\n    const menu = document.getElementById(\"menuLinks\")\r\n    const menuHamburger = document.getElementById(\"menuHamburger\")\r\n    if (menu.style.display === 'block') {\r\n      menu.style.display = 'none'\r\n      menuHamburger.style.color = 'black'\r\n    } else {\r\n      menu.style.display = 'block'\r\n      menuHamburger.style.color = 'grey'\r\n    }\r\n  }\r\n\r\n  // check if signed in user is banned (force log-out if so)\r\n  banCheck = async () => {\r\n    const username = localStorage.getItem('plumUser56010')\r\n    const response = await fetch('/report/checkBanStatus/' + username)\r\n    const body = await response.text()\r\n    if (body === \"exists\") {\r\n      this.logOut()\r\n    }\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div>\r\n        <Link to=\"/\" id=\"loggedInHeaderAppLogo\">\r\n        <img\r\n          src={\r\n            process.env.PUBLIC_URL + '/GifShrText15.png'\r\n          }\r\n          style={{marginTop: '20px'}}\r\n          alt=\"GifShr\"\r\n        />\r\n        </Link>\r\n\r\n        <span id=\"loggedInHeaderButtons\">\r\n          <Link to={\"/profile/\" + localStorage.getItem('plumUser56010')}>\r\n            <img\r\n              id=\"headerProfileLink\"\r\n              src={\r\n                this.state.profileImage\r\n              }\r\n              alt=\"logo\"\r\n            />\r\n          </Link>\r\n            < FontAwesomeIcon\r\n              icon=\"bars\"\r\n              id=\"menuHamburger\"\r\n              className=\"icon\"\r\n              onClick={this.toggleMenu}\r\n            />\r\n        </span>\r\n        <div style={{clear: 'both'}}></div>\r\n        <br />\r\n        <div id=\"menuLinks\" style={{marginBottom: '20px'}}>\r\n          <Link\r\n            to={\"/profile/\" + localStorage.getItem('plumUser56010')}\r\n            onClick={this.toggleMenu}\r\n            className=\"abababa\"\r\n            style={localStorage.getItem('darkMode') === 'true' ?\r\n              {color: '#b5b5b5'} : {color: 'black'}}\r\n          >\r\n            < FontAwesomeIcon icon=\"user\" id=\"profileIcon\" />\r\n            &nbsp;\r\n            My Profile\r\n          </Link>\r\n          <Link\r\n            to={\"/createPost\"}\r\n            onClick={this.toggleMenu}\r\n            style={localStorage.getItem('darkMode') === 'true' ?\r\n              {color: '#b5b5b5'} : {color: 'black'}}\r\n          >\r\n            < FontAwesomeIcon icon=\"plus\" />\r\n            &nbsp;\r\n            Create New Post\r\n          </Link>\r\n          {\r\n          // <Link to={\"/CreateArticlePost\"} onClick={this.toggleMenu}>\r\n          //   < FontAwesomeIcon icon=\"file-alt\" />\r\n          //   &nbsp;\r\n          //   Create New Article\r\n          // </Link>\r\n          }\r\n          <Link\r\n            to={\"/likedPosts\"}\r\n            onClick={this.toggleMenu}\r\n            style={localStorage.getItem('darkMode') === 'true' ?\r\n              {color: '#b5b5b5'} : {color: 'black'}}\r\n          >\r\n            < FontAwesomeIcon icon=\"thumbs-up\" />\r\n            &nbsp;\r\n            Liked Posts\r\n          </Link>\r\n          <Link\r\n            to=\"/settings\"\r\n            onClick={this.toggleMenu}\r\n            style={localStorage.getItem('darkMode') === 'true' ?\r\n              {color: '#b5b5b5'} : {color: 'black'}}\r\n          >\r\n            < FontAwesomeIcon icon=\"cog\" id=\"settingsIcon\" />\r\n            &nbsp;\r\n            Settings\r\n          </Link>\r\n          <a\r\n            href=\"/login\"\r\n            onClick={this.logOut}\r\n            style={localStorage.getItem('darkMode') === 'true' ?\r\n              {color: '#b5b5b5'} : {color: 'black'}}\r\n          >\r\n            < FontAwesomeIcon icon=\"sign-out-alt\" id=\"signOutIcon\" />\r\n            &nbsp;\r\n            Sign out\r\n          </a>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default LoggedInHeader;\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass NotLoggedInHeader extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"notLoggedInHeader\">\r\n        <Link to=\"/timeline\">\r\n        <img\r\n          id=\"appLogo\"\r\n          src={\r\n            process.env.PUBLIC_URL + '/GifShrText15.png'\r\n          }\r\n          style={{marginTop: '20px', float: 'left'}}\r\n          alt=\"GifShr\"\r\n        />\r\n        </Link>\r\n        <span id=\"notLoggedInHeaderButtons\">\r\n          <Link to=\"/login\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-outline-dark\"\r\n              id=\"headerLoginButton\"\r\n              width=\"400px\"\r\n            >\r\n              Log in\r\n            </button>\r\n          </Link>\r\n          <Link to=\"/accountCreation\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-outline-dark\"\r\n              id=\"signUpButton\"\r\n              width=\"400px\"\r\n            >\r\n              Sign up\r\n            </button>\r\n          </Link>\r\n        </span>\r\n        <div style={{clear: 'both'}}></div>\r\n        <br />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default NotLoggedInHeader;\r\n","// pick the correct header to render\r\nimport React, { Component } from 'react';\r\nimport LoggedInHeader from './LoggedInHeader'\r\nimport NotLoggedInHeader from './NotLoggedInHeader'\r\n\r\nclass SiteHeader extends Component {\r\n\r\n  render() {\r\n    const user = localStorage.getItem('plumUser56010')\r\n    if (user) {\r\n      return < LoggedInHeader />\r\n    } else {\r\n      return < NotLoggedInHeader />\r\n    }\r\n  }\r\n}\r\n\r\nexport default SiteHeader;\r\n","import React, { Component } from 'react';\r\n\r\n// max description preview length\r\nconst MAX_DESCRIPTION_PREVIEW_LENGTH = 40\r\n\r\nclass ProfilePreview extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    // check if nsfw profile pic and user viewing has nsfw disabled. If so, don't render\r\n    if (this.props.isProfilePicNsfw && (localStorage.getItem('autoShowNsfw') !== 'true')) {\r\n      this.state = {\r\n        username: this.props.username,\r\n        profileImage: '/nsfw_post_in_grid_with_auto_nsfw_off.png',\r\n        description: this.props.description,\r\n        isComment: this.props.isComment\r\n      }\r\n    } else {\r\n      this.state = {\r\n        username: this.props.username,\r\n        profileImage: this.props.profileImage,\r\n        description: this.props.description,\r\n        isComment: this.props.isComment\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let desc = this.state.description\r\n    if (desc && !this.state.isComment) {\r\n      if (desc.length > MAX_DESCRIPTION_PREVIEW_LENGTH) {\r\n        desc = desc.substring(0, MAX_DESCRIPTION_PREVIEW_LENGTH) + \"...\"\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div className=\"media\" id=\"profilePreview\">\r\n        <img\r\n          id=\"searchResultPic\"\r\n          src= {\r\n            this.state.profileImage\r\n          }\r\n          className=\"mr-3\"\r\n          alt=\"profile\"\r\n        />\r\n        <div className=\"media-body\" id=\"profilePreviewDetails\">\r\n          <h6 className=\"mt-0 mb-0\" id=\"profilePreviewName\">{this.state.username}</h6>\r\n          {desc}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ProfilePreview;\r\n","import React, { Component } from 'react';\r\nimport ProfilePreview from './ProfilePreview';\r\nimport '../styles/Search.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Search extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      user: '',\r\n      noUsers: false,\r\n      currentlyLoadingSearch: false,\r\n      usersResult: []\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.checkDarkMode()\r\n  }\r\n\r\n  checkDarkMode = () => {\r\n    if (localStorage.getItem('darkMode') === 'true') {\r\n      const searchBar = document.getElementById('searchBar')\r\n      const searchResults = document.getElementById('searchResults')\r\n      searchBar.style.backgroundColor = '#999999'\r\n      searchResults.style.backgroundColor = '#999999'\r\n    }\r\n  }\r\n\r\n  // handle page click when using search (hide search results)\r\n  pageClick = async (event) => {\r\n      let targetElement = event.target || event.srcElement;\r\n      // console.log(targetElement.id);\r\n      // console.log(targetElement);\r\n      if (\r\n        targetElement.id !== \"profilePreviewName\" &&\r\n        targetElement.id !== \"profilePreviewDetails\" &&\r\n        targetElement.id !== \"searchResultPic\" &&\r\n        targetElement.id !== \"searchBar\" &&\r\n        targetElement.id !== \"profilePreview\"\r\n      ) {\r\n        this.setState({\r\n          noUsers: false,\r\n          currentlyLoadingSearch: false,\r\n          usersResult: []\r\n        })\r\n        this.toggleResult()\r\n      }\r\n  }\r\n\r\n  // determines which element will be displayed\r\n  // between results, no users found, or loading\r\n  toggleResult = () => {\r\n    const searchResults = document.getElementById(\"searchResults\");\r\n    const searchResultsNone = document.getElementById(\"searchResultsNone\");\r\n    const currentlyLoading = document.getElementById(\"currentlyLoading\");\r\n\r\n    if (this.state.currentlyLoadingSearch) {\r\n      searchResults.style.display = 'none'\r\n      searchResultsNone.style.display = 'none'\r\n      currentlyLoading.style.display = 'block'\r\n    } else if (this.state.noUsers) {\r\n      searchResults.style.display = 'none'\r\n      searchResultsNone.style.display = 'block'\r\n      currentlyLoading.style.display = 'none'\r\n    } else if (this.state.usersResult.length > 0) {\r\n      searchResults.style.display = 'block'\r\n      searchResultsNone.style.display = 'none'\r\n      currentlyLoading.style.display = 'none'\r\n    } else {\r\n      searchResults.style.display = 'none'\r\n      searchResultsNone.style.display = 'none'\r\n      currentlyLoading.style.display = 'none'\r\n    }\r\n  }\r\n\r\n  searchUsers = async (userToSearch) => {\r\n    //userToSearch.preventDefault()\r\n    const query = userToSearch.target.value\r\n    // verification of no funky characters (prevent useless fetch)\r\n    var re = /^\\w+$/;\r\n    if (!re.test(query)) {\r\n      this.setState({\r\n        noUsers: true,\r\n        currentlyLoadingSearch: false,\r\n        usersResult: []\r\n       })\r\n    } else {\r\n      window.addEventListener('mousedown', this.pageClick, false);\r\n      let searchUser = userToSearch.target.value\r\n      this.setState({\r\n        user: searchUser,\r\n        currentlyLoadingSearch: true,\r\n        noUsers: false,\r\n        usersResult: []\r\n      })\r\n      // only request if search field has a value\r\n      if (searchUser.length > 0) {\r\n        const response = await fetch(\r\n          '/profile/searchUsers/' + searchUser\r\n        )\r\n        .catch((error) => {\r\n          console.log(error)\r\n        })\r\n        const body = await response.text()\r\n        const parsedBody = JSON.parse(body)\r\n        // if empty result, let user know\r\n        if (parsedBody.length < 1) {\r\n          this.setState({\r\n            noUsers: true,\r\n            currentlyLoadingSearch: false,\r\n            usersResult: []\r\n           })\r\n        } else {\r\n          this.setState({\r\n            noUsers: false,\r\n            currentlyLoadingSearch: false,\r\n            usersResult: parsedBody\r\n          })\r\n        }\r\n      } else {\r\n        // no value in search field, make sure no result\r\n        this.setState({\r\n          currentlyLoadingSearch: false,\r\n          noUsers: false,\r\n          usersResult: [],\r\n        })\r\n      }\r\n      this.toggleResult()\r\n    }\r\n  }\r\n\r\n  // hide the search results (clicked on a profile to view)\r\n  clickedSearchResultProfile = () => {\r\n    this.setState({\r\n      noUsers: false,\r\n      currentlyLoadingSearch: false,\r\n      usersResult: []\r\n    })\r\n    this.toggleResult()\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <input\r\n          id=\"searchBar\"\r\n          className=\"form-control\"\r\n          type=\"search\"\r\n          placeholder=\"Search Users\"\r\n          aria-label=\"Search\"\r\n          onChange={(searchTerm) => this.searchUsers(searchTerm)}\r\n        />\r\n\r\n        <div id=\"searchResults\">\r\n          {this.state.usersResult.map((user, i) => (\r\n            <Link\r\n              id=\"searchProfileResultLink\"\r\n              key={i}\r\n              to={\"/profile/\" + user.username}\r\n              onClick={this.clickedSearchResultProfile}\r\n              style={{color: 'black'}}\r\n            >\r\n              <ProfilePreview\r\n                username={user.username}\r\n                profileImage={user.profileImage}\r\n                description={user.description}\r\n                isProfilePicNsfw={user.profilePicNsfw}\r\n                key={i}\r\n              />\r\n            </Link>\r\n          ))}\r\n        </div>\r\n\r\n        <div id=\"searchResultsNone\">\r\n          No users found.\r\n        </div>\r\n\r\n        <div id=\"currentlyLoading\">\r\n          Loading...\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Search;\r\n","import React, { Component } from 'react';\r\nimport SpecificPost from './SpecificPost';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { HashLink as Link } from 'react-router-hash-link';\r\n\r\n// individual post which takes up the whole page\r\nclass IndividualPost extends Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      post: null,\r\n      profileExists: true,\r\n      user: '',\r\n      postId: 0,\r\n      profileImage: '',\r\n      marginLeft: 20\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.retrievePost()\r\n      .catch(err => console.log(err))\r\n  }\r\n\r\n  retrievePost = async () => {\r\n    // we will retrieve post using URL data\r\n    const current_url = window.location.href\r\n    const usefulInfo = current_url.split('profile/')[1]\r\n    const user = usefulInfo.split('/')[0]\r\n    const postId = usefulInfo.split('/')[1]\r\n\r\n    // retrieve the corresponding post\r\n    const response = await fetch('/posts/' + user + '/' + postId)\r\n    const body = await response.text()\r\n    const errMessage = \"profile does not exist.\"\r\n    if (body === errMessage) {\r\n      this.setState({\r\n        profileExists: false\r\n      })\r\n    } else {\r\n      const parsedBody = JSON.parse(body)\r\n      this.setState({\r\n        post: parsedBody,\r\n        user: user,\r\n        postId: postId\r\n      })\r\n      this.retrieveProfileImage(user)\r\n    }\r\n  }\r\n\r\n  // function to retrieve profile image (for each comment)\r\n  retrieveProfileImage = async (user) => {\r\n    try {\r\n      const response =\r\n        await fetch('/profile/retrieveProfileImage/' + user)\r\n      const body = await response.text()\r\n      this.setState({\r\n        profileImage: body\r\n      })\r\n    } catch(err) {\r\n      console.error(err)\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (this.state.post) {\r\n      // return post\r\n      return (\r\n        <div id=\"singlePost\">\r\n          <div id=\"individualPostHeader\">\r\n            <Link\r\n              to={\"/profile/\" + this.state.user + \"#\" + this.state.postId.split('#')[0] }>\r\n            < FontAwesomeIcon icon=\"arrow-left\" id=\"individualPostBackArrow\"\r\n              style={\r\n                localStorage.getItem('darkMode') === 'true' ?\r\n                {color: '#b5b5b5'} :\r\n                {color: 'black'}}/>\r\n            </Link>\r\n            <br />\r\n            <br />\r\n            <a href={\"/profile/\" + this.state.post.profile}\r\n              style={\r\n                localStorage.getItem('darkMode') === 'true' ?\r\n                {color: '#b5b5b5'} :\r\n                {color: 'black'}}>\r\n            <img\r\n              id=\"profilePicturePreview\"\r\n              src={\r\n                process.env.PUBLIC_URL +\r\n                this.state.profileImage\r\n              }\r\n              alt=\"profile\"\r\n            />\r\n            &nbsp;\r\n            <strong>{this.state.user}</strong>\r\n            </a>\r\n          </div>\r\n          <SpecificPost\r\n            post={this.state.post}\r\n            isFromProfile={false}\r\n            likedPostsByUser={this.props.likedPostsByUser}\r\n            likedCommentsByUser={this.props.likedCommentsByUser}\r\n          />\r\n        </div>\r\n      )\r\n    } else if (!this.state.profileExists) {\r\n      return \"profile does not exist.\"\r\n    } else {\r\n      return \"post does not exist.\"\r\n    }\r\n  }\r\n}\r\n\r\nexport default IndividualPost;\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n\r\nclass Footer extends Component {\r\n  // When the user clicks on the button, scroll to the top of the document\r\n  scrollToTop = () => {\r\n    document.body.scrollTop = 0; // For Safari\r\n    document.documentElement.scrollTop = 0; // For Chrome, Firefox, IE and Opera\r\n  }\r\n  render() {\r\n    return (\r\n      <div id=\"footer\">\r\n        <span id=\"footerLogo\">\r\n          <img\r\n            width=\"40\"\r\n            src={\r\n              process.env.PUBLIC_URL + '/GifShrLogo.png'\r\n            }\r\n            alt=\"logo\"\r\n          />\r\n        </span>\r\n        &emsp;\r\n        <span id=\"footerLinkColumn\">\r\n          <Link to=\"/about\"\r\n            style={localStorage.getItem('darkMode') === 'true' ? {color: 'white'}\r\n              : {color: 'black'}}\r\n            onClick={this.scrollToTop}>\r\n            About\r\n          </Link>\r\n          &nbsp;|&nbsp;\r\n          <Link to=\"/faq\"\r\n            style={localStorage.getItem('darkMode') === 'true' ? {color: 'white'}\r\n              : {color: 'black'}}\r\n            onClick={this.scrollToTop}>\r\n            FAQ\r\n          </Link>\r\n          &nbsp;|&nbsp;\r\n          <Link to=\"/support\"\r\n            style={localStorage.getItem('darkMode') === 'true' ? {color: 'white'}\r\n              : {color: 'black'}}\r\n            onClick={this.scrollToTop}>\r\n            Support\r\n          </Link>\r\n        </span>\r\n        <br />\r\n        <div style={{textAlign: 'center'}}>\r\n        GifShr &copy; 2020. All rights reserved.\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Footer;\r\n","import React, { Component } from 'react';\r\n\r\n// list of rules that can be in reports\r\nconst RULES = [\r\n  'Inappropriate content involving minor(s)',\r\n  'Content containing abusive, harmful or illegal behavior',\r\n  'Offensive language i.e. threats, obscene racism',\r\n  'Inappropriate/sexual content (missing NSFW tag)',\r\n  'Spam, scamming or phishing'\r\n]\r\n\r\nclass Admin extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      reports: []\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.renderReports()\r\n  }\r\n\r\n  // render reports (will only render for admins)\r\n  renderReports = async () => {\r\n    const user = localStorage.getItem('plumUser56010')\r\n    const response = await fetch('/admin/a8b010/' + user)\r\n    const body = await response.text()\r\n    if (body !== 'You are not an admin.') {\r\n      const parsedBody = await JSON.parse(body)\r\n      this.setState({\r\n        reports: parsedBody\r\n      })\r\n    }\r\n  }\r\n\r\n  // retrieve the post or comment which is under scrutiny\r\n  retrievePostOrCommentInQuestion = async (e) => {\r\n    const reportsIndex = parseInt(e.target.id.split('viewPostButton')[1])\r\n    const reportClicked = this.state.reports[reportsIndex]\r\n    if (reportClicked.postId) {\r\n      // retrieve post from API\r\n      const response = await fetch('/posts/retrievePostById/'\r\n        + reportClicked.postId)\r\n      const body = await response.text()\r\n      const parsedBody = await JSON.parse(body)\r\n      this.setState({\r\n        parsedBody: parsedBody\r\n      })\r\n      // set div to contain this post\r\n      const viewPost = document.getElementById('viewPost' + reportsIndex)\r\n      viewPost.style.display = 'inline'\r\n      const postLink = parsedBody.postId\r\n      viewPost.innerHTML = '&emsp;<a href=\"/profile/' + parsedBody.profile + '/' + postLink + '\" target=\"_blank\">Link to Post</a>'\r\n    } else if (reportClicked.commentId) {\r\n      // retrieve this specific comment from API\r\n\r\n      const response = await fetch('/comments/retrieveCommentById/'\r\n        + reportClicked.commentId)\r\n      const body = await response.text()\r\n      const parsedBody = await JSON.parse(body)\r\n      this.setState({\r\n        parsedBody: parsedBody\r\n      })\r\n\r\n      // set div to contain this comment\r\n      const viewComment = document.getElementById('viewComment' + reportsIndex)\r\n      viewComment.innerHTML = '<br />comment text below: <br />' + parsedBody.content\r\n    }\r\n\r\n  }\r\n\r\n  // deliver a guilty verdict on a post\r\n  guiltyVerdict = async (e) => {\r\n    const reportId = e.target.id.split('guiltyButton')[1]\r\n\r\n    const verdictRule1 = document.getElementById('verdictRule1' + reportId)\r\n    const verdictRule2 = document.getElementById('verdictRule2' + reportId)\r\n    const verdictRule3 = document.getElementById('verdictRule3' + reportId)\r\n    const verdictRule4 = document.getElementById('verdictRule4' + reportId)\r\n    const verdictRule5 = document.getElementById('verdictRule5' + reportId)\r\n\r\n    // deliver guilty verdict to API\r\n    // if at least 1 broken rule checked\r\n    if (verdictRule1.checked ||\r\n        verdictRule2.checked ||\r\n        verdictRule3.checked ||\r\n        verdictRule4.checked ||\r\n        verdictRule5.checked) {\r\n\r\n      // disable buttons on this report\r\n      const innocentButton = document.getElementById('innocentButton' + reportId)\r\n      const guiltyButton = e.target\r\n      innocentButton.disabled = true\r\n      guiltyButton.disabled = true\r\n\r\n      await fetch('/report/guiltyVerdict', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          reportId: reportId,\r\n          rule1Broken: verdictRule1.checked,\r\n          rule2Broken: verdictRule2.checked,\r\n          rule3Broken: verdictRule3.checked,\r\n          rule4Broken: verdictRule4.checked,\r\n          rule5Broken: verdictRule5.checked,\r\n        })\r\n      })\r\n\r\n\r\n    } else {\r\n      alert(\"You must select at least 1 rule the user is guilty of\")\r\n    }\r\n\r\n  }\r\n\r\n  // deliver an innocent verdict on a post\r\n  innocentVerdict = async (e) => {\r\n    const reportId = e.target.id.split('innocentButton')[1]\r\n\r\n    // disable buttons on this report\r\n    const innocentButton = e.target\r\n    const guiltyButton = document.getElementById('guiltyButton' + reportId)\r\n    innocentButton.disabled = true\r\n    guiltyButton.disabled = true\r\n\r\n    // deliver innocent verdict to API\r\n    await fetch('/report/innocentVerdict', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        reportId: reportId\r\n      })\r\n    })\r\n\r\n  }\r\n\r\n  render() {\r\n    if (this.state.reports) {\r\n      return (\r\n        <div style={{marginLeft: '10%'}}>\r\n          {this.state.reports.map((report, i) => (\r\n            <div key={i} style={{marginBottom: '60px'}}>\r\n              Defendant: <a href={'/profile/' + report.defendant} target=\"_blank\" rel=\"noopener noreferrer\">{report.defendant}</a> <br />\r\n              Rules broken:\r\n              {report.rulesReported.map((ruleReported, j) => (\r\n                  <ul key={j}>\r\n                  <div key={j}>\r\n                    <li>{RULES[ruleReported - 1]}</li>\r\n                  </div>\r\n                  </ul>\r\n              ))}\r\n              <br />\r\n              <button\r\n                id={'viewPostButton' + i}\r\n                onClick={this.retrievePostOrCommentInQuestion}\r\n                style={!report.postId && !report.commentId ? {display: 'none'} : {display: 'inline'}}\r\n              >\r\n              View post or comment\r\n              </button>\r\n              <div id={\"viewPost\" + i} style={{display: 'hidden'}}>\r\n              </div>\r\n              <div id={\"viewComment\" + i}>\r\n              </div>\r\n              <br />\r\n              If Guilty, which rules were indeed broken?\r\n              <div className=\"form-check\">\r\n                <input className=\"form-check-input\" type=\"checkbox\" value=\"\" id={\"verdictRule1\" + report._id} />\r\n                <label className=\"form-check-label\" htmlFor={\"verdictRule1\" + report._id} style={{marginTop: '4px'}}>\r\n                  Inappropriate content involving minor(s)\r\n                </label>\r\n              </div>\r\n              <div className=\"form-check\">\r\n                <input className=\"form-check-input\" type=\"checkbox\" value=\"\" id={\"verdictRule2\" + report._id} />\r\n                <label className=\"form-check-label\" htmlFor={\"verdictRule2\" + report._id} style={{marginTop: '4px'}}>\r\n                  Content containing abusive, harmful or illegal behavior\r\n                </label>\r\n              </div>\r\n              <div className=\"form-check\">\r\n                <input className=\"form-check-input\" type=\"checkbox\" value=\"\" id={\"verdictRule3\" + report._id} />\r\n                <label className=\"form-check-label\" htmlFor={\"verdictRule3\" + report._id} style={{marginTop: '4px'}}>\r\n                  Offensive language i.e. threats, obscene racism\r\n                </label>\r\n              </div>\r\n              <div className=\"form-check\">\r\n                <input className=\"form-check-input\" type=\"checkbox\" value=\"\" id={\"verdictRule4\" + report._id} />\r\n                <label className=\"form-check-label\" htmlFor={\"verdictRule4\" + report._id} style={{marginTop: '4px'}}>\r\n                  Inappropriate/sexual content (missing NSFW tag)\r\n                </label>\r\n              </div>\r\n              <div className=\"form-check\">\r\n                <input className=\"form-check-input\" type=\"checkbox\" value=\"\" id={\"verdictRule5\" + report._id} />\r\n                <label className=\"form-check-label\" htmlFor={\"verdictRule5\" + report._id} style={{marginTop: '4px'}}>\r\n                  Spam, scamming or phishing\r\n                </label>\r\n              </div>\r\n              <br />\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-danger\"\r\n                id={\"guiltyButton\" + report._id}\r\n                onClick={this.guiltyVerdict}\r\n                style={{width: '10%', margin: '5px'}}\r\n              >\r\n                Guilty\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-success\"\r\n                id={\"innocentButton\" + report._id}\r\n                onClick={this.innocentVerdict}\r\n                style={{width: '10%', margin: '5px'}}\r\n              >\r\n                Innocent\r\n              </button>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )\r\n    }\r\n    return (\r\n      <div>\r\n        Loading reports...\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Admin;\r\n","import React, { Component } from 'react';\r\nimport PostGrid from './PostGrid';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nclass Timeline extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    if (!localStorage.getItem('plumUser56010')) {\r\n      this.state = {\r\n        globalTimeline: true,\r\n      }\r\n    } else {\r\n      this.state = {\r\n        globalTimeline: false,\r\n      }\r\n    }\r\n  }\r\n\r\n  // handle toggle between global timeline and user timeline\r\n  handleSwitchToggle = (e) => {\r\n    const checked = e.target.checked\r\n    if (checked) {\r\n      this.setState({\r\n        globalTimeline: true\r\n      })\r\n    } else {\r\n      this.setState({\r\n        globalTimeline: false\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"timeline\">\r\n        <div style={localStorage.getItem('plumUser56010') ? {textAlign: 'center'} : {display: 'none'}}>\r\n          <FontAwesomeIcon icon=\"globe\" /> View Trending Posts  &emsp;\r\n          <label className=\"switch\">\r\n            <input\r\n              name=\"layoutSwitch\"\r\n              type=\"checkbox\"\r\n              checked={this.state.globalTimeline}\r\n              onChange={(event) => this.handleSwitchToggle(event)}\r\n            />\r\n            <span className=\"slider round\"></span>\r\n          </label>\r\n        </div>\r\n        <h4 style={localStorage.getItem('plumUser56010') ? {display: 'none'} : {textAlign: 'center'}}>Trending Worldwide</h4>\r\n        <PostGrid\r\n          gridLayout={false}\r\n          posts={this.state.globalTimeline ? this.props.globalTimelinePosts : this.props.timelinePosts}\r\n          likedPostsByUser={this.props.likedPostsByUser}\r\n          likedCommentsByUser={this.props.likedCommentsByUser}\r\n          isTimeline={true}\r\n          url={window.location.href}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Timeline;\r\n","import React, { Component } from 'react';\r\n\r\nclass Settings extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      saveButtonText: 'Save changes',\r\n      statusText: '',\r\n      darkMode: false,\r\n      showNsfw: false,\r\n      autoShowNsfw: false,\r\n      autoCheckNsfwOnPosts: false,\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    // check all variables\r\n    if (localStorage.getItem('darkMode') === 'true') {\r\n      this.setState({\r\n        darkMode: true\r\n      })\r\n    }\r\n    if (localStorage.getItem('showNsfw') === 'true') {\r\n      this.setState({\r\n        showNsfw: true\r\n      })\r\n    }\r\n    if (localStorage.getItem('autoShowNsfw') === 'true') {\r\n      this.setState({\r\n        autoShowNsfw: true\r\n      })\r\n    }\r\n    if (localStorage.getItem('autoCheckNsfwOnPosts') === 'true') {\r\n      this.setState({\r\n        autoCheckNsfwOnPosts: true\r\n      })\r\n    }\r\n  }\r\n\r\n  // handle a setting toggle\r\n  handleSettingToggle = (e) => {\r\n    const body = document.getElementsByTagName(\"BODY\")[0];\r\n    const checked = e.target.checked\r\n    // e.target.name will tell you which switch was toggled\r\n    switch(e.target.name) {\r\n      case 'darkModeSwitch':\r\n        if (checked) {\r\n          this.setState({\r\n            darkMode: true,\r\n            statusText: ''\r\n          })\r\n          // initiate dark mode\r\n          body.style.color = '#b5b5b5'\r\n          body.style.backgroundColor = '#423f3f'\r\n        } else {\r\n          this.setState({\r\n            darkMode: false,\r\n            statusText: ''\r\n          })\r\n          body.style.color = 'black'\r\n          body.style.backgroundColor = '#fafdff'\r\n        }\r\n        break;\r\n      case 'showNsfwSwitch':\r\n        if (checked) {\r\n          this.setState({\r\n            showNsfw: true,\r\n            statusText: ''\r\n          })\r\n        } else {\r\n          this.setState({\r\n            showNsfw: false,\r\n            autoShowNsfw: false, // must be unset if show is unset\r\n            statusText: ''\r\n          })\r\n        }\r\n        break;\r\n      case 'autoShowNsfwSwitch':\r\n        if (checked) {\r\n          this.setState({\r\n            autoShowNsfw: true,\r\n            showNsfw: true, // must be set if auto-show is set\r\n            statusText: ''\r\n          })\r\n        } else {\r\n          this.setState({\r\n            autoShowNsfw: false,\r\n            statusText: ''\r\n          })\r\n        }\r\n        break;\r\n      case 'autoCheckNsfwOnPosts':\r\n        if (checked) {\r\n          this.setState({\r\n            autoCheckNsfwOnPosts: true,\r\n            statusText: ''\r\n          })\r\n        } else {\r\n          this.setState({\r\n            autoCheckNsfwOnPosts: false,\r\n            statusText: ''\r\n          })\r\n        }\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  // save changes\r\n  saveChanges = async () => {\r\n    this.setState({\r\n      saveButtonText: 'Saving...',\r\n      statusText: ''\r\n    })\r\n    // set local storage variables\r\n    localStorage.setItem('darkMode', this.state.darkMode)\r\n    localStorage.setItem('showNsfw', this.state.showNsfw)\r\n    localStorage.setItem('autoShowNsfw', this.state.autoShowNsfw)\r\n    localStorage.setItem('autoCheckNsfwOnPosts',\r\n                          this.state.autoCheckNsfwOnPosts)\r\n    // store preferences in database\r\n    const response = await fetch('/profile/updatePreferences', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        username: localStorage.getItem('plumUser56010'),\r\n        darkMode: this.state.darkMode,\r\n        showNsfw: this.state.showNsfw,\r\n        autoShowNsfw: this.state.autoShowNsfw,\r\n        autoCheckNsfwOnPosts: this.state.autoCheckNsfwOnPosts,\r\n        token: localStorage.getItem('token')\r\n      })\r\n    })\r\n    const body = await response.text()\r\n    if (body === 'success') {\r\n      this.setState({\r\n        saveButtonText: 'Save changes',\r\n        statusText: 'Changes saved.'\r\n      })\r\n    } else {\r\n      this.setState({\r\n        saveButtonText: 'Save changes',\r\n        statusText: 'Failed to save changes.'\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        style={{marginLeft: '5%'}}>\r\n\r\n        <h2>Settings</h2>\r\n        <div\r\n          id=\"settingsMenu\"\r\n          style={{paddingTop: '20px'}}>\r\n          <label className=\"switch\">\r\n            <input\r\n              name=\"darkModeSwitch\"\r\n              type=\"checkbox\"\r\n              checked={this.state.darkMode}\r\n              onChange={(event) => this.handleSettingToggle(event)}\r\n            />\r\n            <span className=\"slider round\"></span>\r\n          </label> &nbsp;\r\n          Night Mode\r\n          <br />\r\n          <br />\r\n          NSFW Settings\r\n          <br />\r\n          By enabling NSFW content, you agree that you are at least 18 years of age.\r\n          <br /><br />\r\n\r\n          <label className=\"switch\">\r\n            <input\r\n              name=\"showNsfwSwitch\"\r\n              type=\"checkbox\"\r\n              checked={this.state.showNsfw}\r\n              onChange={(event) => this.handleSettingToggle(event)}\r\n            />\r\n            <span className=\"slider round\"></span>\r\n          </label> &nbsp;\r\n          Enable NSFW posts\r\n          <br />\r\n          <label className=\"switch\">\r\n            <input\r\n              name=\"autoShowNsfwSwitch\"\r\n              type=\"checkbox\"\r\n              checked={this.state.autoShowNsfw}\r\n              onChange={(event) => this.handleSettingToggle(event)}\r\n            />\r\n            <span className=\"slider round\"></span>\r\n          </label> &nbsp;\r\n          Auto-show NSFW posts\r\n          <br />\r\n\r\n          <label className=\"switch\">\r\n            <input\r\n              name=\"autoCheckNsfwOnPosts\"\r\n              type=\"checkbox\"\r\n              checked={this.state.autoCheckNsfwOnPosts}\r\n              onChange={(event) => this.handleSettingToggle(event)}\r\n            />\r\n            <span className=\"slider round\"></span>\r\n          </label> &nbsp;\r\n          Mark my posts NSFW by default\r\n          <br />\r\n        </div>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-primary\"\r\n          onClick={this.saveChanges}\r\n          style={{width: '200px'}}>\r\n          {this.state.saveButtonText}\r\n        </button>\r\n        <br /> {this.state.statusText}\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default Settings;\r\n","import React, { Component } from 'react';\r\n\r\nclass About extends Component {\r\n  render() {\r\n    return (\r\n      <div style={{marginLeft: '10%', marginRight: '10%'}}>\r\n        <h2 style={{textAlign: 'center'}}>About GifShr</h2>\r\n        <p>\r\n          &emsp; GifShr (pronounced Gif-Share) is currently a web-browser only social media platform which allows users to post, like, share, and comment on various forms of content.\r\n          We offer a human team dedicated to preventing spam, toxicity, and unlawful activity from existing on the platform.\r\n          <br /><br />\r\n          &emsp; GifSh(a)r(e) sprouted from the idea that social media users should be able to monetize their content directly through the app, rather than having to go through sponsors.\r\n          This has transformed into more than just monetization, as we also want to provide an app that prioritizes free speech and doesn't collect user's personal data.\r\n          In the near future, we hope to achieve our goal of providing users with a way to earn ad revenue from their pages.\r\n        </p>\r\n        <br /><br />\r\n        <h2 style={{textAlign: 'center'}}>Mission Statement:</h2>\r\n        <p>\r\n          &emsp; This platform was created with three main goals at the forefront.\r\n          <br /><br />\r\n          &emsp; First, we want privacy for users. This starts with no phone number to sign up, and goes beyond.\r\n          Our platform promises not to sell, share or use any of your information, photos, or posts in any manner whatsoever aside from\r\n          what you see on this platform.\r\n        </p>\r\n        <p>\r\n          &emsp; Second, we want a platform with freedom of speech at the forefront. This means no stifling algorithms to hide posts which\r\n          deserve attention, no shadow banning, no quarantining of posts/users.\r\n          This doesn't mean an absolute free-for-all, as anything posted must still abide by the <a href=\"/guidelines\">guidelines.</a>\r\n        </p>\r\n        <p>\r\n          &emsp; Third, we want to provide content creators with another form of monetization.\r\n          A lot of social media sites have advertisements, with corporations taking all of the revenue from the ads.\r\n          These corporations give none of this revenue to the users' whose content is what brings people to the platform in the first place.\r\n          While there are currently no ads on the site, running this platform costs money and that price only goes up with more users.\r\n          In the future, we are going to crunch the numbers and figure out how to move forward with providing monetization\r\n          for users without losing money as a business.\r\n          Our goal is to have at least 50% of ad revenue go to users. Stay tuned for more information in the future.\r\n        </p>\r\n        <p>\r\n          Thank You for either joining or considering joining GifShr,\r\n          <br /><br />\r\n          The GifShr Team\r\n        </p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default About;\r\n","import React, { Component } from 'react';\r\n\r\nclass Faq extends Component {\r\n  render() {\r\n    return (\r\n      <div style={{marginLeft: '10%', marginRight: '10%'}}>\r\n        <h2 style={{textAlign: 'center'}}>Frequently Asked Questions</h2>\r\n        <br /><br />\r\n        <h4>Are there any rules for what I can post?</h4>\r\n        <p>\r\n          Posts and comments must follow the rules listed on the <a href=\"/guidelines\">guidelines page.</a>\r\n        </p>\r\n        <br />\r\n        <h4>Will there be a mobile app released for Android and iOS?</h4>\r\n        <p>\r\n          As of now, no. Currently, policies for uploading an app to the Google Play store and iOS Store do not allow for NSFW content.\r\n          However, we are actively looking into this matter and may launch mobile apps in the future.\r\n        </p>\r\n        <br />\r\n        <h4>Will I be able to monetize my posts (get paid a portion of ad revenue)?</h4>\r\n        <p>\r\n        While there are currently ads on the site, running this platform costs money and that price only goes up with more users.\r\n        We are crunching the numbers and going to figure out how to move forward with providing monetization for users without losing money as a business.\r\n        Our goal is to have at least 50% of ad revenue go to users. Stay tuned for more information in the future.\r\n        </p>\r\n        <br />\r\n        <h4>Can I report people who break rules?</h4>\r\n        <p>\r\n          Yes, you can report a post, comment, or a profile which is breaking one of the rules listed on our <a href=\"/guidelines\">guidelines.</a> All reports are\r\n           reviewed by a human.\r\n        </p>\r\n        <br />\r\n        <h4>What is the punishment for breaking the rules?</h4>\r\n        <p>\r\n          Users who break a rule will receive a ban and have the offending post or comment removed. Ban durations vary based on the severity of the rule(s) broken.\r\n        </p>\r\n        <br />\r\n        <h4>How do I get to the Settings page?</h4>\r\n        <p>\r\n          You can view your Settings page by clicking on the menu (the 3 horizontal lines) in the top right and then clicking Settings in the menu that pops up.\r\n        </p>\r\n        <br />\r\n        <h4>How can I view NSFW posts?</h4>\r\n        <p>\r\n          First, you must be signed in. Then, on the <a href='/settings'>Settings page</a>, enable the \"Show NSFW posts\" switch. If you want to automatically see posts without clicking them, as well as see NSFW posts\r\n          in Post Grids, enable the \"Auto-show NSFW posts\" option. Remember to click 'Save changes' at the bottom before navigating away from Settings.\r\n        </p>\r\n        <br />\r\n        <h4>How can I view NSFW posts automatically without clicking?</h4>\r\n        <p>\r\n          While being signed in, go to the <a href='/settings'>Settings page</a>, enable the \"Auto-show NSFW posts\" option. Remember to click 'Save changes' at the bottom before navigating away from Settings.\r\n        </p>\r\n        <br />\r\n        <h4>NSFW posts are not appearing in the post grid. How do I make NSFW posts appear in post grid(s)?</h4>\r\n        <p>\r\n          While being signed in, on the <a href='/settings'>Settings page</a>, enable the \"Auto-show NSFW posts\" option. Remember to click 'Save changes' at the bottom before navigating away from Settings.\r\n          This is the only way to get NSFW posts to show up on Post Grid views.\r\n        </p>\r\n        <br />\r\n        <h4>What is considered to be, or classifies as NSFW content?</h4>\r\n        <p>\r\n          NSFW content contains one or more of the following:\r\n        </p>\r\n        <ul>\r\n          <li>Nudity i.e. exposure of 'private parts' in image </li>\r\n          <li>Sexually suggestive content </li>\r\n          <li>Pornography</li>\r\n        </ul>\r\n        <br />\r\n        <h4>Is there a dark / night mode for the site?</h4>\r\n        <p>\r\n          Yes, visit the <a href=\"/settings\">Settings page</a> and enable the \"Night Mode\" option. Remember to click Save changes.\r\n        </p>\r\n        <br />\r\n        <h4>Where are text posts in the post grid?</h4>\r\n        <p>\r\n          It was a design decision to not put text posts in the Post Grid view, as there was no good looking way to implement them.\r\n        </p>\r\n        <br />\r\n        <h4>How can I post NSFW content?</h4>\r\n        <p>\r\n          To post an NSFW image or gif, you must select the 'yes' checkbox when asked if your post is NSFW on the creation page.\r\n        </p>\r\n        <br />\r\n        <h4>What is Post Grid?</h4>\r\n        <p>\r\n          Post Grid is a setting which determines the layout of posts you see on a profile, or on your 'liked posts' page.\r\n          Activating Post Grid will put images in a 3-image-wide grid; each image contains a link to their respective post when clicked.\r\n          Deactivating Post Grid will set these posts to be in a 'timeline' kind of view, with all info for each post displayed.\r\n        </p>\r\n        <br />\r\n        <h4>What if someone is posting content that belongs to me (copyright infringement), or impersonating me?</h4>\r\n        <p>\r\n          Contact support at copyright@gifshr.com with the content being stolen and we will get back to you to resolve the issue.\r\n\r\n        </p>\r\n        <br />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Faq;\r\n","import React, { Component } from 'react';\r\n\r\nclass Support extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h2 style={{textAlign: 'center'}}>Support</h2>\r\n        <p style={{width: '80%', margin: 'auto'}}>\r\n          If you have any questions, concerns, feedback, suggestions,\r\n          or you would like to report a problem, please contact us at: &nbsp;\r\n          <a\r\n            href=\"mailto:ajaxclounst@gmail.com\"\r\n            style={localStorage.getItem('darkMode') === 'true' ?\r\n            {color: 'white'} : {}}>\r\n\r\n            ajaxclounst@gmail.com\r\n        </a>\r\n        </p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Support;\r\n","import React, { Component } from 'react';\r\n\r\nclass Guidelines extends Component {\r\n  render() {\r\n    return (\r\n      <div style={{marginLeft: '10%', marginRight: '10%'}}>\r\n        <h2 style={{textAlign: 'center'}}>Guidelines</h2>\r\n        <p>\r\n          Although full freedom and autonomy is ideal, it's not possible on a social media platform due to toxic, immoral, or illegal behavior. Here are some guidelines for what kind of content will not be tolerated on this platform.<br /><br />\r\n          The following kinds of content will result in your account being banned, with varying severity:\r\n        </p>\r\n        <ul>\r\n          <li>Inappropriate content involving minor(s)</li>\r\n          <li>Content containing abusive, harmful or illegal behavior</li>\r\n          <li>Offensive language i.e. threats, obscene racism</li>\r\n          <li>Inappropriate/sexual content (doesn't apply to NSFW posts - only applies on a post which wasn't indicated to be NSFW upon creation)</li>\r\n          <li>Spam, scamming or phishing</li>\r\n        </ul>\r\n        <br />\r\n        NSFW content contains one or more of the following, and is allowed as long as you mark your post as NSFW:\r\n        <ul>\r\n          <li>Nudity i.e. exposure of 'private parts' in image </li>\r\n          <li>Sexually suggestive content </li>\r\n          <li>Pornography</li>\r\n        </ul>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Guidelines;\r\n","import React, { Component } from 'react';\r\n\r\nclass PasswordRecovery extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      responseToRequest: '',\r\n      emailSentTo: ''\r\n    }\r\n  }\r\n\r\n  // send recovery code to this email\r\n  sendRecoveryCode = async () => {\r\n    // if email is entered, request from api\r\n    const emailInput = document.getElementById('emailInput').value\r\n\r\n    if (emailInput === '') {\r\n      // display empty message\r\n      document.getElementById('emailEmptyError').style.display = 'inline'\r\n      return\r\n    } else {\r\n      document.getElementById('emailEmptyError').style.display = 'none'\r\n    }\r\n\r\n    const response = await fetch('/profile/requestRecoveryCode', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        email: emailInput\r\n      })\r\n    })\r\n\r\n    const body = await response.text()\r\n\r\n    if (body === 'does not exist') {\r\n      // if response is 'does not exist',\r\n      // relay message that username or email does not exist\r\n      document.getElementById('emailDoesNotExistError').style.display = 'inline'\r\n    } else if (body === 'sent'){\r\n      document.getElementById('emailDoesNotExistError').style.display = 'none'\r\n      document.getElementById('emailEmptyError').style.display = 'none'\r\n      document.getElementById('recoverySentRecently').style.display = 'none'\r\n      // if response is 'sent',\r\n      // relay message that recovery code has been sent\r\n      this.setState({\r\n        emailSentTo: emailInput\r\n      })\r\n\r\n      // display the recovery code entry box\r\n      // hide the input boxes\r\n      document.getElementById('passwordRecoveryForm').style.display = 'none'\r\n      document.getElementById('recoveryCodeForm').style.display = 'inline'\r\n    } else if (body === 'please wait') {\r\n      document.getElementById('recoverySentRecently').style.display = 'inline'\r\n    }\r\n  }\r\n\r\n  // send request to set new password\r\n  setNewPassword = async () => {\r\n    // if email is entered, request from api\r\n    const recoveryCodeInput = document.getElementById('recoveryCodeInput').value\r\n    const newPasswordInput = document.getElementById('newPasswordInput').value\r\n    const repeatNewPasswordInput = document.getElementById('repeatNewPasswordInput').value\r\n\r\n    if (!recoveryCodeInput) {\r\n      // display empty message\r\n      document.getElementById('recoveryCodeError').style.display = 'inline'\r\n      return\r\n    } else {\r\n      document.getElementById('recoveryCodeError').style.display = 'none'\r\n    }\r\n\r\n    // verify new password is between 5 and 30 chars, and passwords match\r\n    if (newPasswordInput.length < 5) {\r\n      document.getElementById('newPasswordLengthError').style.display = 'inline'\r\n      return\r\n    } else {\r\n      document.getElementById('newPasswordLengthError').style.display = 'none'\r\n    }\r\n\r\n    if (newPasswordInput !== repeatNewPasswordInput) {\r\n      document.getElementById('newPasswordsDoNotMatchError').style.display = 'inline'\r\n      return\r\n    } else {\r\n      document.getElementById('newPasswordsDoNotMatchError').style.display = 'none'\r\n    }\r\n\r\n    const response = await fetch('/profile/requestPasswordReset', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        recoveryCode: recoveryCodeInput,\r\n        email: this.state.emailSentTo,\r\n        newPassword: newPasswordInput\r\n      })\r\n    })\r\n\r\n    const body = await response.text()\r\n\r\n    if (body === 'incorrect recovery code') {\r\n      // if response is 'incorrect recovery code',\r\n      // relay message that incorrect recovery code was entered\r\n      document.getElementById('incorrectRecoveryCodeError').style.display = 'inline'\r\n    } else if (body !== 'error'){\r\n      document.getElementById('recoveryCodeForm').style.display = 'none'\r\n      document.getElementById('resetSuccessful').style.display = 'inline'\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div style={{width: '80%', textAlign: 'center', margin: 'auto', paddingTop: '40px'}}>\r\n        <h3>Password Recovery</h3>\r\n        <div id=\"passwordRecoveryForm\">\r\n          Enter email associated with your account:\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"email\"\r\n              className=\"form-control\"\r\n              id=\"emailInput\"\r\n              placeholder=\"Email\"\r\n            />\r\n          </div>\r\n          <div\r\n            id=\"emailEmptyError\"\r\n            style={{color: 'red', display: 'none'}}>\r\n\r\n            Email cannot be empty.\r\n            <br />\r\n          </div>\r\n          <div\r\n            id=\"recoverySentRecently\"\r\n            style={{color: 'red', display: 'none'}}>\r\n\r\n            There was recently a recovery request for this account. \r\n            You must wait 5 minutes before requesting another recovery code.\r\n            <br />\r\n          </div>\r\n          <div\r\n            id=\"emailDoesNotExistError\"\r\n            style={{color: 'red', display: 'none'}}>\r\n\r\n            There is no account associated with this email.\r\n            <br />\r\n          </div>\r\n          <button\r\n            type=\"submit\"\r\n            className=\"btn btn-primary\"\r\n            style={{width: '200px'}}\r\n            onClick={this.sendRecoveryCode}\r\n          >\r\n            Send Code\r\n          </button>\r\n        </div>\r\n        <div id=\"recoveryCodeForm\" style={{display: 'none'}}>\r\n          <br />\r\n          Enter 8-digit code sent to your email.\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"number\"\r\n              className=\"form-control\"\r\n              id=\"recoveryCodeInput\"\r\n              placeholder=\"8-digit code\"\r\n            />\r\n          </div>\r\n          <div id=\"recoveryCodeError\" style={{color: 'red', display: 'none'}}>\r\n          <br />\r\n            You must enter the recovery code sent to your email. <br />Not getting an email?\r\n            Check your spam folder or try again.\r\n          <br />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"password\"\r\n              className=\"form-control\"\r\n              minLength=\"5\"\r\n              maxLength=\"30\"\r\n              id=\"newPasswordInput\"\r\n              placeholder=\"New password\"\r\n            />\r\n          </div>\r\n          <div id=\"newPasswordLengthError\" style={{color: 'red', display: 'none'}}>\r\n            Your password must be between 5 and 30 characters.\r\n            <br />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"password\"\r\n              className=\"form-control\"\r\n              minLength=\"5\"\r\n              maxLength=\"30\"\r\n              id=\"repeatNewPasswordInput\"\r\n              placeholder=\"Repeat new password\"\r\n            />\r\n          </div>\r\n          <div id=\"newPasswordsDoNotMatchError\" style={{color: 'red', display: 'none'}}>\r\n            Your new password entries do not match.\r\n            <br />\r\n          </div>\r\n          <div id=\"incorrectRecoveryCodeError\" style={{color: 'red', display: 'none'}}>\r\n            Incorrect recovery code entered. You must get a new recovery code.\r\n            <br />\r\n          </div>\r\n          <button\r\n            type=\"submit\"\r\n            className=\"btn btn-success\"\r\n            style={{width: '200px'}}\r\n            onClick={this.setNewPassword}\r\n          >\r\n            Set new password\r\n          </button>\r\n        </div>\r\n        <div\r\n          id=\"resetSuccessful\"\r\n          style={{display: 'none'}}>\r\n          <br />\r\n          Your password has been successfully reset. <a href=\"/login\">Log in.</a>\r\n          <br />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default PasswordRecovery;\r\n","import React, { Component } from 'react';\r\n\r\nclass CreateArticlePost extends Component {\r\n  render() {\r\n    return (\r\n      <div style={{width: '50%', margin: 'auto'}}>\r\n        <h3>Article Creator</h3>\r\n        Coming soon\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CreateArticlePost;\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport './fontawesome';\nimport './styles/loginPage.css';\nimport LoginPage from './components/LoginPage';\nimport AccountCreation from './components/AccountCreation';\nimport ProfilePage from './components/ProfilePage';\nimport EditProfile from './components/EditProfile';\nimport CreatePost from './components/CreatePost';\nimport { Switch, Route } from 'react-router-dom';\nimport SiteHeader from './components/SiteHeader';\nimport Search from './components/Search';\nimport IndividualPost from './components/IndividualPost';\nimport Footer from './components/Footer';\nimport Admin from './components/Admin';\nimport Timeline from './components/Timeline';\nimport Settings from './components/Settings';\nimport About from './components/About';\nimport Faq from './components/Faq';\nimport Support from './components/Support';\nimport Guidelines from './components/Guidelines';\nimport PasswordRecovery from './components/PasswordRecovery';\nimport CreateArticlePost from './components/CreateArticlePost2';\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      likedPostsByUser: [],\n      likedCommentsByUser: [],\n      loggedInUserFollowing: [],\n      timelinePosts: [],\n      globalTimelinePosts: [],\n      profileDescription: '',\n    }\n    this.retrieveUserInfo()\n    this.retrieveLikedPostsByUser()\n    this.retrieveLikedCommentsByUser()\n    this.retrieveTimelinePosts()\n    this.retrieveGlobalTimelinePosts()\n    this.retrieveProfileImage()\n    this.checkDarkMode()\n  }\n\n  // check if dark mode\n  checkDarkMode = async () => {\n    const body = document.getElementsByTagName(\"BODY\")[0];\n    if (localStorage.getItem('darkMode') === 'true') {\n      // initiate dark mode\n      body.style.color = '#b5b5b5'\n      body.style.backgroundColor = '#423f3f'\n    }\n  }\n\n  // retrieve liked posts by user\n  retrieveLikedPostsByUser = async () => {\n    const user = localStorage.getItem('plumUser56010')\n    // retrieve\n    if (user) {\n      const response = await fetch('/posts/likedPosts', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          user: user,\n          token: localStorage.getItem('token')\n        })\n      })\n        .catch(err => console.log(err))\n      const body = await response.text()\n      if (body === 'error') {\n        alert('Error occurred retrieving liked posts.')\n        return\n      }\n      const likedPosts = await JSON.parse(body)\n      this.setState({\n        likedPostsByUser: likedPosts\n      })\n    }\n  }\n\n  // retrieve liked comments by user\n  retrieveLikedCommentsByUser = async () => {\n    const user = localStorage.getItem('plumUser56010')\n    if (user) {\n      // retrieve\n      const response = await fetch('/comments/' + user + '/likedComments')\n      const body = await response.text()\n      const likedComments = await JSON.parse(body)\n      this.setState({\n        likedCommentsByUser: likedComments\n      })\n    }\n  }\n\n  // retrieve info of the user signed in\n  retrieveUserInfo = async () => {\n    const user = localStorage.getItem('plumUser56010')\n    if (user) {\n      const response = await fetch('/profile/retrieveProfileInfo', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          profile: user,\n          token: localStorage.getItem('token')\n        })\n      })\n      const body = await response.text()\n      if (body !== \"profile not found.\" && body !== 'error') {\n        const parsedBody = JSON.parse(body)\n        this.setState({\n          loggedInUserFollowing: parsedBody.following,\n          profileDescription: parsedBody.description\n        })\n      }\n    }\n  }\n\n  // retrieve the posts which will be in the user's timeline\n  retrieveTimelinePosts = async () => {\n    if (!localStorage.getItem('plumUser56010')) {\n      return\n    }\n    // retrieve timeline posts for this user\n    // (posts from profiles they are following)\n    // retrieve posts from last 5 days\n    // sorted in most recent order (recent to old)\n    const response = await fetch('/posts/timelinePosts', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username: localStorage.getItem('plumUser56010'),\n        token: localStorage.getItem('token')\n      })\n    })\n    const body = await response.text()\n    if (body !== 'error') {\n      const parsedBody = JSON.parse(body)\n      this.setState({\n        timelinePosts: parsedBody\n      })\n    }\n  }\n\n  // retrieve globally trending posts\n  retrieveGlobalTimelinePosts = async () => {\n    const response = await fetch('/posts/globalTimelinePosts')\n    const body = await response.text()\n    if (body !== 'error') {\n      const parsedBody = JSON.parse(body)\n      this.setState({\n        globalTimelinePosts: parsedBody\n      })\n    }\n  }\n\n  // retrieve the user's profile image (for header)\n  retrieveProfileImage = async () => {\n    if (localStorage.getItem('plumUser56010')) {\n      const response = await fetch(\n            '/profile/retrieveProfileImage/' + localStorage.getItem('plumUser56010'))\n      const body = await response.text()\n      localStorage.setItem('profileImage', body)\n    }\n  }\n\n  render() {\n    return(\n      <div>\n        <div className=\"pageContainer\">\n        < Search />\n        <header className=\"navigation\">\n          < SiteHeader />\n        </header>\n        <Switch>\n          <Route\n            exact path=\"/\"\n            render={(props) => (\n              <Timeline {...props}\n                timelinePosts={this.state.timelinePosts}\n                globalTimelinePosts={this.state.globalTimelinePosts}\n                likedPostsByUser={this.state.likedPostsByUser}\n                likedCommentsByUser={this.state.likedCommentsByUser}\n                loggedInUserFollowing={this.state.loggedInUserFollowing}\n              />\n            )}\n           />\n          <Route exact path=\"/login\" component={LoginPage} />\n          <Route exact path=\"/accountCreation\" component={AccountCreation} />\n          <Route\n            exact path=\"/timeline\"\n            render={(props) => (\n              <Timeline {...props}\n                timelinePosts={this.state.timelinePosts}\n                globalTimelinePosts={this.state.globalTimelinePosts}\n                likedPostsByUser={this.state.likedPostsByUser}\n                likedCommentsByUser={this.state.likedCommentsByUser}\n                loggedInUserFollowing={this.state.loggedInUserFollowing}\n              />\n            )}\n          />\n          <Route\n            exact path=\"/profile/:username\"\n            render={(props) => (\n              <ProfilePage {...props}\n                likedPostsByUser={this.state.likedPostsByUser}\n                loggedInUserFollowing={this.state.loggedInUserFollowing}\n              />\n            )}\n          />\n          <Route\n            exact path=\"/profile/:username/:postId\"\n            render={(props) => (\n              <IndividualPost {...props}\n                likedPostsByUser={this.state.likedPostsByUser}\n                likedCommentsByUser={this.state.likedCommentsByUser}\n              />\n            )}\n          />\n          <Route exact path=\"/editProfile\"\n            render={(props) => (\n              <EditProfile {...props}\n                description={this.state.profileDescription}\n              />\n            )}\n          />\n          <Route exact path=\"/createPost\" component={CreatePost} />\n          <Route exact path=\"/settings\" component={Settings} />\n          <Route\n            exact path=\"/likedPosts\"\n            render={(props) => (\n              <ProfilePage {...props} likedPostsByUser={this.state.likedPostsByUser} />\n            )}\n          />\n          <Route exact path=\"/admin/a8b010\" component={Admin} />\n          <Route exact path=\"/about\" component={About} />\n          <Route exact path=\"/faq\" component={Faq} />\n          <Route exact path=\"/support\" component={Support} />\n          <Route exact path=\"/guidelines\" component={Guidelines} />\n          <Route exact path=\"/passwordRecovery\" component={PasswordRecovery} />\n          <Route exact path=\"/CreateArticlePost\" component={CreateArticlePost} />\n        </Switch>\n        </div>\n      <Footer />\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {BrowserRouter} from 'react-router-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './fontawesome';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}